<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="namespacetesting_1_1internal" kind="namespace" language="C++">
    <compoundname>testing::internal</compoundname>
    <innerclass refid="structtesting_1_1internal_1_1BuiltInDefaultValueGetter" prot="public">testing::internal::BuiltInDefaultValueGetter</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1BuiltInDefaultValueGetter_3_01T_00_01false_01_4" prot="public">testing::internal::BuiltInDefaultValueGetter&lt; T, false &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1BuiltInDefaultValue" prot="public">testing::internal::BuiltInDefaultValue</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1BuiltInDefaultValue_3_01const_01T_01_4" prot="public">testing::internal::BuiltInDefaultValue&lt; const T &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1BuiltInDefaultValue_3_01T_01_5_01_4" prot="public">testing::internal::BuiltInDefaultValue&lt; T * &gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1ByMoveWrapper" prot="public">testing::internal::ByMoveWrapper</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1ReturnAction" prot="public">testing::internal::ReturnAction</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1ReturnNullAction" prot="public">testing::internal::ReturnNullAction</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1ReturnVoidAction" prot="public">testing::internal::ReturnVoidAction</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1ReturnRefAction" prot="public">testing::internal::ReturnRefAction</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1ReturnRefOfCopyAction" prot="public">testing::internal::ReturnRefOfCopyAction</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1ReturnRoundRobinAction" prot="public">testing::internal::ReturnRoundRobinAction</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1DoDefaultAction" prot="public">testing::internal::DoDefaultAction</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1AssignAction" prot="public">testing::internal::AssignAction</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1SetErrnoAndReturnAction" prot="public">testing::internal::SetErrnoAndReturnAction</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1SetArgumentPointeeAction" prot="public">testing::internal::SetArgumentPointeeAction</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1InvokeMethodAction" prot="public">testing::internal::InvokeMethodAction</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1InvokeWithoutArgsAction" prot="public">testing::internal::InvokeWithoutArgsAction</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1InvokeMethodWithoutArgsAction" prot="public">testing::internal::InvokeMethodWithoutArgsAction</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1IgnoreResultAction" prot="public">testing::internal::IgnoreResultAction</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1WithArgsAction" prot="public">testing::internal::WithArgsAction</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1DoAllAction" prot="public">testing::internal::DoAllAction</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1ReturnNewAction" prot="public">testing::internal::ReturnNewAction</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1ReturnArgAction" prot="public">testing::internal::ReturnArgAction</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1SaveArgAction" prot="public">testing::internal::SaveArgAction</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1SaveArgPointeeAction" prot="public">testing::internal::SaveArgPointeeAction</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1SetArgRefereeAction" prot="public">testing::internal::SetArgRefereeAction</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1SetArrayArgumentAction" prot="public">testing::internal::SetArrayArgumentAction</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1DeleteArgAction" prot="public">testing::internal::DeleteArgAction</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1ReturnPointeeAction" prot="public">testing::internal::ReturnPointeeAction</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1ExcessiveArg" prot="public">testing::internal::ExcessiveArg</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1ActionImpl" prot="public">testing::internal::ActionImpl</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1ImplBase" prot="public">testing::internal::ImplBase</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1ActionImpl_3_01R_07Args_8_8_8_08_00_01Impl_01_4" prot="public">testing::internal::ActionImpl&lt; R(Args...), Impl &gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1ThisRefAdjuster" prot="public">testing::internal::ThisRefAdjuster</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1InvokeArgumentAction" prot="public">testing::internal::InvokeArgumentAction</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1NiceMockImpl" prot="public">testing::internal::NiceMockImpl</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1NaggyMockImpl" prot="public">testing::internal::NaggyMockImpl</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1StrictMockImpl" prot="public">testing::internal::StrictMockImpl</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1KindOf" prot="public">testing::internal::KindOf</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1FailureReporterInterface" prot="public">testing::internal::FailureReporterInterface</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1WithoutMatchers" prot="public">testing::internal::WithoutMatchers</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1StlContainerView" prot="public">testing::internal::StlContainerView</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1StlContainerView_3_01Element_0fN_0e_4" prot="public">testing::internal::StlContainerView&lt; Element[N]&gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1StlContainerView_3_01_1_1std_1_1tuple_3_01ElementPointer_00_01Size_01_4_01_4" prot="public">testing::internal::StlContainerView&lt; ::std::tuple&lt; ElementPointer, Size &gt; &gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1RemoveConstFromKey" prot="public">testing::internal::RemoveConstFromKey</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1RemoveConstFromKey_3_01std_1_1pair_3_01const_01K_00_01V_01_4_01_4" prot="public">testing::internal::RemoveConstFromKey&lt; std::pair&lt; const K, V &gt; &gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1Function" prot="public">testing::internal::Function</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1Function_3_01R_07Args_8_8_8_08_4" prot="public">testing::internal::Function&lt; R(Args...)&gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1ContainerPrinter" prot="public">testing::internal::ContainerPrinter</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1FunctionPointerPrinter" prot="public">testing::internal::FunctionPointerPrinter</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1PointerPrinter" prot="public">testing::internal::PointerPrinter</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1ProtobufPrinter" prot="public">testing::internal::ProtobufPrinter</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1ConvertibleToIntegerPrinter" prot="public">testing::internal::ConvertibleToIntegerPrinter</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1ConvertibleToStringViewPrinter" prot="public">testing::internal::ConvertibleToStringViewPrinter</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1RawBytesPrinter" prot="public">testing::internal::RawBytesPrinter</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1FallbackPrinter" prot="public">testing::internal::FallbackPrinter</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1FindFirstPrinter" prot="public">testing::internal::FindFirstPrinter</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1FindFirstPrinter_3_01T_00_01decltype_07Printer_1_1PrintValue_07std_17231b6251638573aa4521359a6075f3" prot="public">testing::internal::FindFirstPrinter&lt; T, decltype(Printer::PrintValue(std::declval&lt; const T &amp; &gt;(), nullptr)), Printer, Printers... &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1FormatForComparison" prot="public">testing::internal::FormatForComparison</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1FormatForComparison_3_01ToPrint_0fN_0e_00_01OtherOperand_01_4" prot="public">testing::internal::FormatForComparison&lt; ToPrint[N], OtherOperand &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1UniversalPrinter" prot="public">testing::internal::UniversalPrinter</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1UniversalPrinter_3_01const_01T_01_4" prot="public">testing::internal::UniversalPrinter&lt; const T &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1UniversalPrinter_3_01T_0fN_0e_4" prot="public">testing::internal::UniversalPrinter&lt; T[N]&gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1UniversalPrinter_3_01T_01_6_01_4" prot="public">testing::internal::UniversalPrinter&lt; T &amp; &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1UniversalTersePrinter" prot="public">testing::internal::UniversalTersePrinter</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1UniversalTersePrinter_3_01T_01_6_01_4" prot="public">testing::internal::UniversalTersePrinter&lt; T &amp; &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1UniversalTersePrinter_3_01T_0fN_0e_4" prot="public">testing::internal::UniversalTersePrinter&lt; T[N]&gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1UniversalTersePrinter_3_01const_01char_01_5_01_4" prot="public">testing::internal::UniversalTersePrinter&lt; const char * &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1UniversalTersePrinter_3_01char_01_5_01_4" prot="public">testing::internal::UniversalTersePrinter&lt; char * &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1UniversalTersePrinter_3_01const_01char16__t_01_5_01_4" prot="public">testing::internal::UniversalTersePrinter&lt; const char16_t * &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1UniversalTersePrinter_3_01char16__t_01_5_01_4" prot="public">testing::internal::UniversalTersePrinter&lt; char16_t * &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1UniversalTersePrinter_3_01const_01char32__t_01_5_01_4" prot="public">testing::internal::UniversalTersePrinter&lt; const char32_t * &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1UniversalTersePrinter_3_01char32__t_01_5_01_4" prot="public">testing::internal::UniversalTersePrinter&lt; char32_t * &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1UniversalTersePrinter_3_01wchar__t_01_5_01_4" prot="public">testing::internal::UniversalTersePrinter&lt; wchar_t * &gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1faketype" prot="public">testing::internal::faketype</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1EqHelper" prot="public">testing::internal::EqHelper</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1AssertHelper" prot="public">testing::internal::AssertHelper</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1IgnoredValue" prot="public">testing::internal::IgnoredValue</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1FloatingPoint" prot="public">testing::internal::FloatingPoint</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1TypeIdHelper" prot="public">testing::internal::TypeIdHelper</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1TestFactoryBase" prot="public">testing::internal::TestFactoryBase</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1TestFactoryImpl" prot="public">testing::internal::TestFactoryImpl</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1CodeLocation" prot="public">testing::internal::CodeLocation</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1SuiteApiResolver" prot="public">testing::internal::SuiteApiResolver</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1DefaultNameGenerator" prot="public">testing::internal::DefaultNameGenerator</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1NameGeneratorSelector" prot="public">testing::internal::NameGeneratorSelector</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1TypeParameterizedTest" prot="public">testing::internal::TypeParameterizedTest</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1TypeParameterizedTest_3_01Fixture_00_01TestSel_00_01internal_1_1None_01_4" prot="public">testing::internal::TypeParameterizedTest&lt; Fixture, TestSel, internal::None &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1TypeParameterizedTestSuite" prot="public">testing::internal::TypeParameterizedTestSuite</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1TypeParameterizedTestSuite_3_01Fixture_00_01internal_1_1None_00_01Types_01_4" prot="public">testing::internal::TypeParameterizedTestSuite&lt; Fixture, internal::None, Types &gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1ConstCharPtr" prot="public">testing::internal::ConstCharPtr</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1TrueWithString" prot="public">testing::internal::TrueWithString</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1Random" prot="public">testing::internal::Random</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1HasDebugStringAndShortDebugString" prot="public">testing::internal::HasDebugStringAndShortDebugString</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1IsHashTable" prot="public">testing::internal::IsHashTable</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1IsRecursiveContainerImpl" prot="public">testing::internal::IsRecursiveContainerImpl</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1IsRecursiveContainerImpl_3_01C_00_01false_01_4" prot="public">testing::internal::IsRecursiveContainerImpl&lt; C, false &gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1IsRecursiveContainerImpl_3_01C_00_01true_01_4" prot="public">testing::internal::IsRecursiveContainerImpl&lt; C, true &gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1IsRecursiveContainer" prot="public">testing::internal::IsRecursiveContainer</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1RelationToSourceReference" prot="public">testing::internal::RelationToSourceReference</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1RelationToSourceCopy" prot="public">testing::internal::RelationToSourceCopy</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1NativeArray" prot="public">testing::internal::NativeArray</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1IndexSequence" prot="public">testing::internal::IndexSequence</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1DoubleSequence" prot="public">testing::internal::DoubleSequence</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1DoubleSequence_3_01true_00_01IndexSequence_3_01I_8_8_8_01_4_00_01sizeofT_01_4" prot="public">testing::internal::DoubleSequence&lt; true, IndexSequence&lt; I... &gt;, sizeofT &gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1DoubleSequence_3_01false_00_01IndexSequence_3_01I_8_8_8_01_4_00_01sizeofT_01_4" prot="public">testing::internal::DoubleSequence&lt; false, IndexSequence&lt; I... &gt;, sizeofT &gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1MakeIndexSequenceImpl" prot="public">testing::internal::MakeIndexSequenceImpl</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1MakeIndexSequenceImpl_3_010_01_4" prot="public">testing::internal::MakeIndexSequenceImpl&lt; 0 &gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1Ignore" prot="public">testing::internal::Ignore</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1ElemFromListImpl" prot="public">testing::internal::ElemFromListImpl</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1ElemFromListImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4" prot="public">testing::internal::ElemFromListImpl&lt; IndexSequence&lt; I... &gt; &gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1ElemFromList" prot="public">testing::internal::ElemFromList</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1FlatTupleConstructTag" prot="public">testing::internal::FlatTupleConstructTag</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1FlatTuple" prot="public">testing::internal::FlatTuple</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1FlatTupleElemBase" prot="public">testing::internal::FlatTupleElemBase</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1FlatTupleElemBase_3_01FlatTuple_3_01T_8_8_8_01_4_00_01I_01_4" prot="public">testing::internal::FlatTupleElemBase&lt; FlatTuple&lt; T... &gt;, I &gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1FlatTupleBase" prot="public">testing::internal::FlatTupleBase</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1FlatTupleBase_3_01FlatTuple_3_01T_8_8_8_01_4_00_01IndexSequence_3_01Idx_8_8_8_01_4_01_4" prot="public">testing::internal::FlatTupleBase&lt; FlatTuple&lt; T... &gt;, IndexSequence&lt; Idx... &gt; &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1ParamGeneratorInterface" prot="public">testing::internal::ParamGeneratorInterface</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1ParamGenerator" prot="public">testing::internal::ParamGenerator</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1ParamIteratorInterface" prot="public">testing::internal::ParamIteratorInterface</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1ParamIterator" prot="public">testing::internal::ParamIterator</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1RangeGenerator" prot="public">testing::internal::RangeGenerator</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1ValuesInIteratorRangeGenerator" prot="public">testing::internal::ValuesInIteratorRangeGenerator</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1ParameterizedTestFactory" prot="public">testing::internal::ParameterizedTestFactory</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1TestMetaFactoryBase" prot="public">testing::internal::TestMetaFactoryBase</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1TestMetaFactory" prot="public">testing::internal::TestMetaFactory</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1ParameterizedTestSuiteInfoBase" prot="public">testing::internal::ParameterizedTestSuiteInfoBase</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1MarkAsIgnored" prot="public">testing::internal::MarkAsIgnored</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1ParameterizedTestSuiteInfo" prot="public">testing::internal::ParameterizedTestSuiteInfo</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1ParameterizedTestSuiteRegistry" prot="public">testing::internal::ParameterizedTestSuiteRegistry</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1TypeParameterizedTestSuiteRegistry" prot="public">testing::internal::TypeParameterizedTestSuiteRegistry</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1ValueArray" prot="public">testing::internal::ValueArray</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1CartesianProductGenerator" prot="public">testing::internal::CartesianProductGenerator</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1CartesianProductHolder" prot="public">testing::internal::CartesianProductHolder</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1RE" prot="public">testing::internal::RE</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1GTestLog" prot="public">testing::internal::GTestLog</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1ConstRef" prot="public">testing::internal::ConstRef</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1ConstRef_3_01T_01_6_01_4" prot="public">testing::internal::ConstRef&lt; T &amp; &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1Mutex" prot="public">testing::internal::Mutex</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1GTestMutexLock" prot="public">testing::internal::GTestMutexLock</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1ThreadLocal" prot="public">testing::internal::ThreadLocal</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1TypeWithSize" prot="public">testing::internal::TypeWithSize</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1TypeWithSize_3_014_01_4" prot="public">testing::internal::TypeWithSize&lt; 4 &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1TypeWithSize_3_018_01_4" prot="public">testing::internal::TypeWithSize&lt; 8 &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1String" prot="public">testing::internal::String</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1None" prot="public">testing::internal::None</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1TemplateSel" prot="public">testing::internal::TemplateSel</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1Templates" prot="public">testing::internal::Templates</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1Templates_3_01Head___01_4" prot="public">testing::internal::Templates&lt; Head_ &gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1Types" prot="public">testing::internal::Types</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1Types_3_01Head___01_4" prot="public">testing::internal::Types&lt; Head_ &gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1ProxyTypeList" prot="public">testing::internal::ProxyTypeList</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1is__proxy__type__list" prot="public">testing::internal::is_proxy_type_list</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1is__proxy__type__list_3_01ProxyTypeList_3_01Ts_8_8_8_01_4_01_4" prot="public">testing::internal::is_proxy_type_list&lt; ProxyTypeList&lt; Ts... &gt; &gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1GenerateTypeList" prot="public">testing::internal::GenerateTypeList</innerclass>
    <innernamespace refid="namespacetesting_1_1internal_1_1edit__distance">testing::internal::edit_distance</innernamespace>
    <innernamespace refid="namespacetesting_1_1internal_1_1internal__stream__operator__without__lexical__name__lookup">testing::internal::internal_stream_operator_without_lexical_name_lookup</innernamespace>
    <innernamespace refid="namespacetesting_1_1internal_1_1posix">testing::internal::posix</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="gmock-internal-utils_8h_1aa8747bda20137c9aa7f846dee830e686" prot="public" static="no" strong="no">
        <type></type>
        <name>TypeKind</name>
        <enumvalue id="gmock-internal-utils_8h_1aa8747bda20137c9aa7f846dee830e686a3af2191917fb1796599139b3615302fe" prot="public">
          <name>kBool</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gmock-internal-utils_8h_1aa8747bda20137c9aa7f846dee830e686a8a52f0fd73e05da35c45d80653633cab" prot="public">
          <name>kInteger</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gmock-internal-utils_8h_1aa8747bda20137c9aa7f846dee830e686acdce59b8c136926ace18aa9c2995878d" prot="public">
          <name>kFloatingPoint</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gmock-internal-utils_8h_1aa8747bda20137c9aa7f846dee830e686ad47f29150ab7a9ec8ce2491f44537347" prot="public">
          <name>kOther</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="100" column="1" bodyfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="enum" id="gmock-internal-utils_8h_1a203d1a8a2147a53d12bbdae40d443914" prot="public" static="no" strong="no">
        <type></type>
        <name>LogSeverity</name>
        <enumvalue id="gmock-internal-utils_8h_1a203d1a8a2147a53d12bbdae40d443914a396aacfaee2849eaab7c1de9773d624d" prot="public">
          <name>kInfo</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gmock-internal-utils_8h_1a203d1a8a2147a53d12bbdae40d443914a5beeeab1b0a3caabd0afb43356c1a271" prot="public">
          <name>kWarning</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="240" column="1" bodyfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" bodystart="240" bodyend="243"/>
      </memberdef>
      <memberdef kind="enum" id="gtest-port_8h_1aa6255ef3b023c5b4e1a2198d887fb977" prot="public" static="no" strong="no">
        <type></type>
        <name>GTestLogSeverity</name>
        <enumvalue id="gtest-port_8h_1aa6255ef3b023c5b4e1a2198d887fb977aff315e0913fcda86fe4de882bf5e33e9" prot="public">
          <name>GTEST_INFO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gtest-port_8h_1aa6255ef3b023c5b4e1a2198d887fb977a7a051bc2794f15a4bf0eab40562a304c" prot="public">
          <name>GTEST_WARNING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gtest-port_8h_1aa6255ef3b023c5b4e1a2198d887fb977a651e9cd2a904e0c8210536271b875f75" prot="public">
          <name>GTEST_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gtest-port_8h_1aa6255ef3b023c5b4e1a2198d887fb977a75063567740f6bf7da419b1b9197b12e" prot="public">
          <name>GTEST_FATAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="957" column="1" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" bodystart="957" bodyend="962"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="gmock-actions_8h_1a1cb539b10f51b71cf103a2e7a422aedc" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
          <param>
            <type>typename Q</type>
          </param>
        </templateparamlist>
        <type>typename ::std::conditional&lt; P::value, P, Q &gt;::type</type>
        <definition>using testing::internal::disjunction = typedef typename ::std::conditional&lt;P::value, P, Q&gt;::type</definition>
        <argsstring></argsstring>
        <name>disjunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-actions.h" line="269" column="1" bodyfile="/home/jan/packages/elements/include/gmock/gmock-actions.h" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gmock-function-mocker_8h_1a07fa327c77997f009efb5a07a285bd14" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>using testing::internal::identity_t = typedef T</definition>
        <argsstring></argsstring>
        <name>identity_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-function-mocker.h" line="49" column="1" bodyfile="/home/jan/packages/elements/include/gmock/gmock-function-mocker.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gmock-internal-utils_8h_1ac66e9687984566b86192b20eb1eabfda" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>TypeKind</type>
            <declname>kFromKind</declname>
            <defname>kFromKind</defname>
          </param>
          <param>
            <type>typename From</type>
          </param>
          <param>
            <type>TypeKind</type>
            <declname>kToKind</declname>
            <defname>kToKind</defname>
          </param>
          <param>
            <type>typename To</type>
          </param>
        </templateparamlist>
        <type>std::integral_constant&lt; bool,(kFromKind==kBool) ? true :(kFromKind !=kToKind) ? false :(kFromKind==kInteger &amp;&amp;(((sizeof(From)&lt; sizeof(To)) &amp;&amp;!(std::is_signed&lt; From &gt;::value &amp;&amp;!std::is_signed&lt; To &gt;::value))||((sizeof(From)==sizeof(To)) &amp;&amp;(std::is_signed&lt; From &gt;::value==std::is_signed&lt; To &gt;::value)))) ? true :(kFromKind==kFloatingPoint &amp;&amp;(sizeof(From)&lt;=sizeof(To))) ? true :false &gt;</type>
        <definition>using testing::internal::LosslessArithmeticConvertibleImpl = typedef std::integral_constant&lt; bool, (kFromKind == kBool) ? true : (kFromKind != kToKind) ? false : (kFromKind == kInteger &amp;&amp; (((sizeof(From) &lt; sizeof(To)) &amp;&amp; !(std::is_signed&lt;From&gt;::value &amp;&amp; !std::is_signed&lt;To&gt;::value)) || ((sizeof(From) == sizeof(To)) &amp;&amp; (std::is_signed&lt;From&gt;::value == std::is_signed&lt;To&gt;::value))) ) ? true : (kFromKind == kFloatingPoint &amp;&amp; (sizeof(From) &lt;= sizeof(To))) ? true : false &gt;</definition>
        <argsstring></argsstring>
        <name>LosslessArithmeticConvertibleImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="154" column="1" bodyfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gmock-internal-utils_8h_1aaf1492f6584dbc5074fe93eec2e99704" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename From</type>
          </param>
          <param>
            <type>typename To</type>
          </param>
        </templateparamlist>
        <type>LosslessArithmeticConvertibleImpl&lt; GMOCK_KIND_OF_(From), From, GMOCK_KIND_OF_(To), To &gt;</type>
        <definition>using testing::internal::LosslessArithmeticConvertible = typedef LosslessArithmeticConvertibleImpl&lt;GMOCK_KIND_OF_(From), From, GMOCK_KIND_OF_(To), To&gt;</definition>
        <argsstring></argsstring>
        <name>LosslessArithmeticConvertible</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="187" column="1" bodyfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gtest-printers_8h_1a50003bb76ec2934be1062be11efba8bf" prot="public" static="no">
        <type>::std::vector&lt; ::std::string &gt;</type>
        <definition>typedef ::std::vector&lt; ::std::string&gt; testing::internal::Strings</definition>
        <argsstring></argsstring>
        <name>Strings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="983" column="23" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="983" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gtest-internal_8h_1a02e1981f5ff70609e6ac06e006ff519a" prot="public" static="no">
        <type><ref refid="classtesting_1_1internal_1_1FloatingPoint" kindref="compound">FloatingPoint</ref>&lt; float &gt;</type>
        <definition>typedef FloatingPoint&lt;float&gt; testing::internal::Float</definition>
        <argsstring></argsstring>
        <name>Float</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="408" column="23" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gtest-internal_8h_1a66a7579b1893b260c31dad577f7a5c48" prot="public" static="no">
        <type><ref refid="classtesting_1_1internal_1_1FloatingPoint" kindref="compound">FloatingPoint</ref>&lt; double &gt;</type>
        <definition>typedef FloatingPoint&lt;double&gt; testing::internal::Double</definition>
        <argsstring></argsstring>
        <name>Double</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="409" column="23" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gtest-internal_8h_1ab1114197d3c657d8b7f8e0c5caa12d00" prot="public" static="no">
        <type>const void *</type>
        <definition>typedef const void* testing::internal::TypeId</definition>
        <argsstring></argsstring>
        <name>TypeId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="417" column="20" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="417" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gtest-internal_8h_1a83e4e0732ac6a9dcfe6ee299dc1b9fa2" prot="public" static="no">
        <type>void(*)()</type>
        <definition>using testing::internal::SetUpTestSuiteFunc = typedef void (*)()</definition>
        <argsstring></argsstring>
        <name>SetUpTestSuiteFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="489" column="1" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="489" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gtest-internal_8h_1a8257a87aa42cebaa54b0c48a6ae657a5" prot="public" static="no">
        <type>void(*)()</type>
        <definition>using testing::internal::TearDownTestSuiteFunc = typedef void (*)()</definition>
        <argsstring></argsstring>
        <name>TearDownTestSuiteFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="490" column="1" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="490" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gtest-internal_8h_1a04786aa10f8b0bf38a5ead94d00475f4" prot="public" static="no">
        <type>void(*)()</type>
        <definition>using testing::internal::SetUpTearDownSuiteFuncType = typedef void (*)()</definition>
        <argsstring></argsstring>
        <name>SetUpTearDownSuiteFuncType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="504" column="1" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="504" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gtest-internal_8h_1a2bc581b768695d84c5a153de8af2629f" prot="public" static="no">
        <type>TypedTestSuitePState</type>
        <definition>using testing::internal::TypedTestCasePState = typedef TypedTestSuitePState</definition>
        <argsstring></argsstring>
        <name>TypedTestCasePState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="645" column="1" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="645" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gtest-internal_8h_1ad8f0c2883245f1df2a53618a49f0deb3" prot="public" static="no">
        <type>int</type>
        <definition>typedef int testing::internal::IsContainer</definition>
        <argsstring></argsstring>
        <name>IsContainer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="944" column="13" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="944" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gtest-internal_8h_1abf080521ce135deb510e0a7830fd3d33" prot="public" static="no">
        <type>char</type>
        <definition>typedef char testing::internal::IsNotContainer</definition>
        <argsstring></argsstring>
        <name>IsNotContainer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="955" column="14" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="955" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gtest-internal_8h_1ac4603a2df7edcb3e2302ac9e2aa0c11d" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="structtesting_1_1internal_1_1MakeIndexSequenceImpl" kindref="compound">MakeIndexSequenceImpl</ref>&lt; N &gt;::type</type>
        <definition>using testing::internal::MakeIndexSequence = typedef typename MakeIndexSequenceImpl&lt;N&gt;::type</definition>
        <argsstring></argsstring>
        <name>MakeIndexSequence</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="1185" column="1" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="1185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gtest-internal_8h_1ac8c1771a307e60fe81ae4d73089769f2" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>typename MakeIndexSequence&lt; sizeof...(T)&gt;::type</type>
        <definition>using testing::internal::IndexSequenceFor = typedef typename MakeIndexSequence&lt;sizeof...(T)&gt;::type</definition>
        <argsstring></argsstring>
        <name>IndexSequenceFor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="1188" column="1" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="1188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gtest-param-util_8h_1aac31682b6b41997d6cc610a5787dc8bc" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class TestCase</type>
          </param>
        </templateparamlist>
        <type><ref refid="classtesting_1_1internal_1_1ParameterizedTestSuiteInfo" kindref="compound">ParameterizedTestSuiteInfo</ref>&lt; TestCase &gt;</type>
        <definition>using testing::internal::ParameterizedTestCaseInfo = typedef ParameterizedTestSuiteInfo&lt;TestCase&gt;</definition>
        <argsstring></argsstring>
        <name>ParameterizedTestCaseInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-param-util.h" line="675" column="1" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-param-util.h" bodystart="675" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gtest-port_8h_1a08b187c6cc4e28400aadf9a32fccc8de" prot="public" static="no">
        <type><ref refid="classtesting_1_1internal_1_1GTestMutexLock" kindref="compound">GTestMutexLock</ref></type>
        <definition>typedef GTestMutexLock testing::internal::MutexLock</definition>
        <argsstring></argsstring>
        <name>MutexLock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="1886" column="24" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" bodystart="1886" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gtest-port_8h_1a401a4a0aa297cd335eea7f641e6c931c" prot="public" static="no">
        <type>long long</type>
        <definition>using testing::internal::BiggestInt = typedef long long</definition>
        <argsstring></argsstring>
        <name>BiggestInt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="2151" column="1" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" bodystart="2151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gtest-port_8h_1ab36b15423002d1cd490f8d9daeb9c816" prot="public" static="no">
        <type>int64_t</type>
        <definition>using testing::internal::TimeInMillis = typedef int64_t</definition>
        <argsstring></argsstring>
        <name>TimeInMillis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="2199" column="1" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" bodystart="2199" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="gmock-internal-utils_8h_1a96274a788ffc75a6dffdfa8aa1f34fb9" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char testing::internal::kInfoVerbosity[]</definition>
        <argsstring>[]</argsstring>
        <name>kInfoVerbosity</name>
        <initializer>= &quot;info&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="248" column="12" bodyfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gmock-internal-utils_8h_1ad9386ccda6b6deac2f7b84784d3088c0" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char testing::internal::kWarningVerbosity[]</definition>
        <argsstring>[]</argsstring>
        <name>kWarningVerbosity</name>
        <initializer>= &quot;warning&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="250" column="12" bodyfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gmock-internal-utils_8h_1a3d730761274e7b80dd66e5014171fcb5" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char testing::internal::kErrorVerbosity[]</definition>
        <argsstring>[]</argsstring>
        <name>kErrorVerbosity</name>
        <initializer>= &quot;error&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="252" column="12" bodyfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest-death-test-internal_8h_1a008ebfe0c0347d65e5e06e4d310981b3" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char testing::internal::kDeathTestStyleFlag[]</definition>
        <argsstring>[]</argsstring>
        <name>kDeathTestStyleFlag</name>
        <initializer>= &quot;death_test_style&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-death-test-internal.h" line="51" column="12" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-death-test-internal.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest-death-test-internal_8h_1a32051e2574562b548be3e26a52eaa553" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char testing::internal::kDeathTestUseFork[]</definition>
        <argsstring>[]</argsstring>
        <name>kDeathTestUseFork</name>
        <initializer>= &quot;death_test_use_fork&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-death-test-internal.h" line="52" column="12" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-death-test-internal.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest-death-test-internal_8h_1a8572303d929880adf30db00952e1c45d" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char testing::internal::kInternalRunDeathTestFlag[]</definition>
        <argsstring>[]</argsstring>
        <name>kInternalRunDeathTestFlag</name>
        <initializer>= &quot;internal_run_death_test&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-death-test-internal.h" line="53" column="12" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-death-test-internal.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest-internal_8h_1a999c7ef9ff01b6d2d76669372c444aa3" prot="public" static="no" mutable="no">
        <type>GTEST_API_ const char</type>
        <definition>GTEST_API_ const char testing::internal::kStackTraceMarker[]</definition>
        <argsstring>[]</argsstring>
        <name>kStackTraceMarker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="119" column="30" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" declline="119" declcolumn="30"/>
      </memberdef>
      <memberdef kind="variable" id="gtest-port_8h_1a756613c601d58a38308fe85e5243de9e" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr BiggestInt</type>
        <definition>constexpr BiggestInt testing::internal::kMaxBiggestInt</definition>
        <argsstring></argsstring>
        <name>kMaxBiggestInt</name>
        <initializer>= (std::numeric_limits&lt;BiggestInt&gt;::max)()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="2154" column="22" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" bodystart="2154" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="gmock-actions_8h_1a8fe6f7c11d6d3dd6e42b75c9a5b43861" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</definition>
        <argsstring>(void,)</argsstring>
        <name>GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-actions.h" line="237" column="1" declfile="/home/jan/packages/elements/include/gmock/gmock-actions.h" declline="237" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-actions_8h_1a0a961f38f341d40237252babcb3767b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</definition>
        <argsstring>(::std::string, &quot;&quot;)</argsstring>
        <name>GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</name>
        <param>
          <type>::std::string</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-actions.h" line="238" column="1" declfile="/home/jan/packages/elements/include/gmock/gmock-actions.h" declline="238" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-actions_8h_1aa6670915f42119e4ba20d8cb74fc1eea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</definition>
        <argsstring>(bool, false)</argsstring>
        <name>GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</name>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-actions.h" line="239" column="1" declfile="/home/jan/packages/elements/include/gmock/gmock-actions.h" declline="239" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-actions_8h_1ab203e2c4c54f2ca86439344347a3e43f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</definition>
        <argsstring>(unsigned char, &apos;\0&apos;)</argsstring>
        <name>GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</name>
        <param>
          <type>unsigned char</type>
        </param>
        <param>
          <type>&apos;\0&apos;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-actions.h" line="240" column="1" declfile="/home/jan/packages/elements/include/gmock/gmock-actions.h" declline="240" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-actions_8h_1aaedb3b1b5307625bc84dc660742da3c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</definition>
        <argsstring>(signed char, &apos;\0&apos;)</argsstring>
        <name>GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</name>
        <param>
          <type>signed char</type>
        </param>
        <param>
          <type>&apos;\0&apos;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-actions.h" line="241" column="1" declfile="/home/jan/packages/elements/include/gmock/gmock-actions.h" declline="241" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-actions_8h_1aeaaa7101572f283fe70a85ad5e6c65dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</definition>
        <argsstring>(char, &apos;\0&apos;)</argsstring>
        <name>GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</name>
        <param>
          <type>char</type>
        </param>
        <param>
          <type>&apos;\0&apos;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-actions.h" line="242" column="1" declfile="/home/jan/packages/elements/include/gmock/gmock-actions.h" declline="242" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-actions_8h_1ab2965a6078670393812e67f8e5fcb072" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</definition>
        <argsstring>(unsigned short, 0U)</argsstring>
        <name>GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</name>
        <param>
          <type>unsigned short</type>
        </param>
        <param>
          <type>0U</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-actions.h" line="254" column="1" declfile="/home/jan/packages/elements/include/gmock/gmock-actions.h" declline="254" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-actions_8h_1ae6ea5db83b290e2412f321c3b1eb8c47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</definition>
        <argsstring>(signed short, 0)</argsstring>
        <name>GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</name>
        <param>
          <type>signed short</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-actions.h" line="255" column="1" declfile="/home/jan/packages/elements/include/gmock/gmock-actions.h" declline="255" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-actions_8h_1a4285332d8eae4bdfffc13b6c05252c30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</definition>
        <argsstring>(unsigned int, 0U)</argsstring>
        <name>GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</name>
        <param>
          <type>unsigned int</type>
        </param>
        <param>
          <type>0U</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-actions.h" line="256" column="1" declfile="/home/jan/packages/elements/include/gmock/gmock-actions.h" declline="256" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-actions_8h_1a200a33af38e17df617883567c4fd96ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</definition>
        <argsstring>(signed int, 0)</argsstring>
        <name>GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</name>
        <param>
          <type>signed int</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-actions.h" line="257" column="1" declfile="/home/jan/packages/elements/include/gmock/gmock-actions.h" declline="257" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-actions_8h_1a1f4167b954a7ff0074ce8a5bb855f86f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</definition>
        <argsstring>(unsigned long, 0UL)</argsstring>
        <name>GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</name>
        <param>
          <type>unsigned long</type>
        </param>
        <param>
          <type>0UL</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-actions.h" line="258" column="1" declfile="/home/jan/packages/elements/include/gmock/gmock-actions.h" declline="258" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-actions_8h_1ad8804e25537427755c324ab03a72e776" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</definition>
        <argsstring>(signed long, 0L)</argsstring>
        <name>GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</name>
        <param>
          <type>signed long</type>
        </param>
        <param>
          <type>0L</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-actions.h" line="259" column="1" declfile="/home/jan/packages/elements/include/gmock/gmock-actions.h" declline="259" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-actions_8h_1a9320ef876df4a3dff276a9df2965b81f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</definition>
        <argsstring>(unsigned long long, 0)</argsstring>
        <name>GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</name>
        <param>
          <type>unsigned long long</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-actions.h" line="260" column="1" declfile="/home/jan/packages/elements/include/gmock/gmock-actions.h" declline="260" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-actions_8h_1a9a816b3e5d95850b4111fc9a3459d796" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</definition>
        <argsstring>(signed long long, 0)</argsstring>
        <name>GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</name>
        <param>
          <type>signed long long</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-actions.h" line="261" column="1" declfile="/home/jan/packages/elements/include/gmock/gmock-actions.h" declline="261" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-actions_8h_1a71c697e5b567365fd3ff6c720769633b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</definition>
        <argsstring>(float, 0)</argsstring>
        <name>GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</name>
        <param>
          <type>float</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-actions.h" line="262" column="1" declfile="/home/jan/packages/elements/include/gmock/gmock-actions.h" declline="262" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-actions_8h_1a7ba92aa33f4968c902623cd02e445020" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</definition>
        <argsstring>(double, 0)</argsstring>
        <name>GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_</name>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-actions.h" line="263" column="1" declfile="/home/jan/packages/elements/include/gmock/gmock-actions.h" declline="263" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-actions_8h_1a4872c17640822d8f534f55f0fc6ae5a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
          <param>
            <type>typename Impl</type>
          </param>
        </templateparamlist>
        <type>::<ref refid="classtesting_1_1Action" kindref="compound">testing::Action</ref>&lt; F &gt;</type>
        <definition>::testing::Action&lt;F&gt; testing::internal::MakeAction</definition>
        <argsstring>()</argsstring>
        <name>MakeAction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-actions.h" line="1536" column="19" bodyfile="/home/jan/packages/elements/include/gmock/gmock-actions.h" bodystart="1536" bodyend="1538"/>
      </memberdef>
      <memberdef kind="function" id="gmock-actions_8h_1aa64bf18426a55bd9ec81591f0ea27833" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
          <param>
            <type>typename Impl</type>
          </param>
        </templateparamlist>
        <type>::<ref refid="classtesting_1_1Action" kindref="compound">testing::Action</ref>&lt; F &gt;</type>
        <definition>::testing::Action&lt;F&gt; testing::internal::MakeAction</definition>
        <argsstring>(std::shared_ptr&lt; Impl &gt; impl)</argsstring>
        <name>MakeAction</name>
        <param>
          <type>std::shared_ptr&lt; Impl &gt;</type>
          <declname>impl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-actions.h" line="1542" column="19" bodyfile="/home/jan/packages/elements/include/gmock/gmock-actions.h" bodystart="1542" bodyend="1544"/>
      </memberdef>
      <memberdef kind="function" id="gmock-more-actions_8h_1a4c6f0469015303fe29a4f08ba036e6d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto testing::internal::InvokeArgument</definition>
        <argsstring>(F f, Args... args) -&gt; decltype(f(args...))</argsstring>
        <name>InvokeArgument</name>
        <param>
          <type>F</type>
          <declname>f</declname>
        </param>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-more-actions.h" line="509" column="6" bodyfile="/home/jan/packages/elements/include/gmock/gmock-more-actions.h" bodystart="509" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="gmock-nice-strict_8h_1ad22f77acf625ef4e861897a490c7068e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::true_type</type>
        <definition>std::true_type testing::internal::StrictnessModifierProbe</definition>
        <argsstring>(const NiceMock&lt; T &gt; &amp;)</argsstring>
        <name>StrictnessModifierProbe</name>
        <param>
          <type>const <ref refid="classtesting_1_1NiceMock" kindref="compound">NiceMock</ref>&lt; T &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-nice-strict.h" line="81" column="16" declfile="/home/jan/packages/elements/include/gmock/gmock-nice-strict.h" declline="81" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="gmock-nice-strict_8h_1ac4138321699df568ce325fe2dd5835a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::true_type</type>
        <definition>std::true_type testing::internal::StrictnessModifierProbe</definition>
        <argsstring>(const NaggyMock&lt; T &gt; &amp;)</argsstring>
        <name>StrictnessModifierProbe</name>
        <param>
          <type>const <ref refid="classtesting_1_1NaggyMock" kindref="compound">NaggyMock</ref>&lt; T &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-nice-strict.h" line="83" column="16" declfile="/home/jan/packages/elements/include/gmock/gmock-nice-strict.h" declline="83" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="gmock-nice-strict_8h_1a7e7bbe381d577ce690fe3f3644a9f84d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::true_type</type>
        <definition>std::true_type testing::internal::StrictnessModifierProbe</definition>
        <argsstring>(const StrictMock&lt; T &gt; &amp;)</argsstring>
        <name>StrictnessModifierProbe</name>
        <param>
          <type>const <ref refid="classtesting_1_1StrictMock" kindref="compound">StrictMock</ref>&lt; T &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-nice-strict.h" line="85" column="16" declfile="/home/jan/packages/elements/include/gmock/gmock-nice-strict.h" declline="85" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="gmock-nice-strict_8h_1a398c4c32256d923b2a38fdbc622e96cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::false_type</type>
        <definition>std::false_type testing::internal::StrictnessModifierProbe</definition>
        <argsstring>(...)</argsstring>
        <name>StrictnessModifierProbe</name>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-nice-strict.h" line="86" column="17" declfile="/home/jan/packages/elements/include/gmock/gmock-nice-strict.h" declline="86" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="gmock-nice-strict_8h_1ae1f41ca6a1393a5f0117f09f97139f96" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool testing::internal::HasStrictnessModifier</definition>
        <argsstring>()</argsstring>
        <name>HasStrictnessModifier</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-nice-strict.h" line="89" column="16" bodyfile="/home/jan/packages/elements/include/gmock/gmock-nice-strict.h" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1a4ffe5309bf49f08145ed010a6d244e41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ std::string</type>
        <definition>GTEST_API_ std::string testing::internal::JoinAsTuple</definition>
        <argsstring>(const Strings &amp;fields)</argsstring>
        <name>JoinAsTuple</name>
        <param>
          <type>const Strings &amp;</type>
          <declname>fields</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="66" column="24" declfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" declline="66" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1a0b375abcf3081393e6c420194a541b29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ std::string</type>
        <definition>GTEST_API_ std::string testing::internal::ConvertIdentifierNameToWords</definition>
        <argsstring>(const char *id_name)</argsstring>
        <name>ConvertIdentifierNameToWords</name>
        <param>
          <type>const char *</type>
          <declname>id_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="72" column="24" declfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" declline="72" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1ae88d1a6f95165c43c27a6c0e2d357e61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Pointer</type>
          </param>
        </templateparamlist>
        <type>const Pointer::element_type *</type>
        <definition>const Pointer::element_type* testing::internal::GetRawPointer</definition>
        <argsstring>(const Pointer &amp;p)</argsstring>
        <name>GetRawPointer</name>
        <param>
          <type>const Pointer &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="78" column="45" bodyfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1a4d17b114b61b805ac5f37e9c26e29e55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Element</type>
          </param>
        </templateparamlist>
        <type>Element *</type>
        <definition>Element* testing::internal::GetRawPointer</definition>
        <argsstring>(Element *p)</argsstring>
        <name>GetRawPointer</name>
        <param>
          <type>Element *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="83" column="16" bodyfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1a20f5584732e44a368e7acf295b639319" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DECLARE_KIND_</definition>
        <argsstring>(bool, kBool)</argsstring>
        <name>GMOCK_DECLARE_KIND_</name>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>kBool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="113" column="1" declfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" declline="113" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1ac8f3722ca21d8b14f86e5c949e843508" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DECLARE_KIND_</definition>
        <argsstring>(char, kInteger)</argsstring>
        <name>GMOCK_DECLARE_KIND_</name>
        <param>
          <type>char</type>
        </param>
        <param>
          <type>kInteger</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="116" column="1" declfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" declline="116" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1ae5b8e77d245fd0838ab22e439e92e9af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DECLARE_KIND_</definition>
        <argsstring>(signed char, kInteger)</argsstring>
        <name>GMOCK_DECLARE_KIND_</name>
        <param>
          <type>signed char</type>
        </param>
        <param>
          <type>kInteger</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="117" column="1" declfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" declline="117" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1ab13e89be2f0f22b1da9e22cd53bce5ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DECLARE_KIND_</definition>
        <argsstring>(unsigned char, kInteger)</argsstring>
        <name>GMOCK_DECLARE_KIND_</name>
        <param>
          <type>unsigned char</type>
        </param>
        <param>
          <type>kInteger</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="118" column="1" declfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" declline="118" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1af191a2be9cff1d5900426ef5aa59851e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DECLARE_KIND_</definition>
        <argsstring>(short, kInteger)</argsstring>
        <name>GMOCK_DECLARE_KIND_</name>
        <param>
          <type>short</type>
        </param>
        <param>
          <type>kInteger</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="119" column="1" declfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" declline="119" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1a6138ee5ce9f509d39e874e4eedb89ae1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DECLARE_KIND_</definition>
        <argsstring>(unsigned short, kInteger)</argsstring>
        <name>GMOCK_DECLARE_KIND_</name>
        <param>
          <type>unsigned short</type>
        </param>
        <param>
          <type>kInteger</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="120" column="1" declfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" declline="120" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1a59fb8e3bb6f1fec656ed8bdab0048f9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DECLARE_KIND_</definition>
        <argsstring>(int, kInteger)</argsstring>
        <name>GMOCK_DECLARE_KIND_</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>kInteger</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="121" column="1" declfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" declline="121" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1abdce95ddf8b975d2a17e76a4c5a6c37f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DECLARE_KIND_</definition>
        <argsstring>(unsigned int, kInteger)</argsstring>
        <name>GMOCK_DECLARE_KIND_</name>
        <param>
          <type>unsigned int</type>
        </param>
        <param>
          <type>kInteger</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="122" column="1" declfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" declline="122" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1a40597f856b3d94dc82e9fbbf9b027819" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DECLARE_KIND_</definition>
        <argsstring>(long, kInteger)</argsstring>
        <name>GMOCK_DECLARE_KIND_</name>
        <param>
          <type>long</type>
        </param>
        <param>
          <type>kInteger</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="123" column="1" declfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" declline="123" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1a8224329431c90b3d943cc43ac92e6e42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DECLARE_KIND_</definition>
        <argsstring>(unsigned long, kInteger)</argsstring>
        <name>GMOCK_DECLARE_KIND_</name>
        <param>
          <type>unsigned long</type>
        </param>
        <param>
          <type>kInteger</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="124" column="1" declfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" declline="124" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1a6f7d45c2ecfaa024f658b3657eb8cf69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DECLARE_KIND_</definition>
        <argsstring>(long long, kInteger)</argsstring>
        <name>GMOCK_DECLARE_KIND_</name>
        <param>
          <type>long long</type>
        </param>
        <param>
          <type>kInteger</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="125" column="1" declfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" declline="125" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1adf250c65b8eeda029c911bbfe8e1ff77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DECLARE_KIND_</definition>
        <argsstring>(unsigned long long, kInteger)</argsstring>
        <name>GMOCK_DECLARE_KIND_</name>
        <param>
          <type>unsigned long long</type>
        </param>
        <param>
          <type>kInteger</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="126" column="1" declfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" declline="126" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1af00aa2679c10ed170064e5ec5dd80e29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DECLARE_KIND_</definition>
        <argsstring>(wchar_t, kInteger)</argsstring>
        <name>GMOCK_DECLARE_KIND_</name>
        <param>
          <type>wchar_t</type>
        </param>
        <param>
          <type>kInteger</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="129" column="1" declfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" declline="129" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1ad4ebf1b53b79ac38fbd18ccf4d63ceca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DECLARE_KIND_</definition>
        <argsstring>(float, kFloatingPoint)</argsstring>
        <name>GMOCK_DECLARE_KIND_</name>
        <param>
          <type>float</type>
        </param>
        <param>
          <type>kFloatingPoint</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="133" column="1" declfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" declline="133" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1a45748f4c08b868cb4939081769cdc7b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DECLARE_KIND_</definition>
        <argsstring>(double, kFloatingPoint)</argsstring>
        <name>GMOCK_DECLARE_KIND_</name>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>kFloatingPoint</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="134" column="1" declfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" declline="134" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1af46fdd94d8aea0da729b554de443315f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GMOCK_DECLARE_KIND_</definition>
        <argsstring>(long double, kFloatingPoint)</argsstring>
        <name>GMOCK_DECLARE_KIND_</name>
        <param>
          <type>long double</type>
        </param>
        <param>
          <type>kFloatingPoint</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="135" column="1" declfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" declline="135" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1aa261c22df383e9007129c92e36e30e62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ <ref refid="classtesting_1_1internal_1_1FailureReporterInterface" kindref="compound">FailureReporterInterface</ref> *</type>
        <definition>GTEST_API_ FailureReporterInterface* testing::internal::GetFailureReporter</definition>
        <argsstring>()</argsstring>
        <name>GetFailureReporter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="208" column="37" declfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" declline="208" declcolumn="37"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1aa46ca46a5898b2ac75184c62e0355621" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::Assert</definition>
        <argsstring>(bool condition, const char *file, int line, const std::string &amp;msg)</argsstring>
        <name>Assert</name>
        <param>
          <type>bool</type>
          <declname>condition</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="215" column="13" bodyfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" bodystart="215" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1a23e71d198ce26b51f84a0b024dc3e054" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::Assert</definition>
        <argsstring>(bool condition, const char *file, int line)</argsstring>
        <name>Assert</name>
        <param>
          <type>bool</type>
          <declname>condition</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="222" column="13" bodyfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" bodystart="222" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1ad93379317e10862a77b9fb90aa96e083" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::Expect</definition>
        <argsstring>(bool condition, const char *file, int line, const std::string &amp;msg)</argsstring>
        <name>Expect</name>
        <param>
          <type>bool</type>
          <declname>condition</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="228" column="13" bodyfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" bodystart="228" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1a0dfe8a755bd02aa5ea162764b61a9d97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::Expect</definition>
        <argsstring>(bool condition, const char *file, int line)</argsstring>
        <name>Expect</name>
        <param>
          <type>bool</type>
          <declname>condition</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="235" column="13" bodyfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" bodystart="235" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1a69ffdba5ee36743e88d8f89b79e566ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ bool</type>
        <definition>GTEST_API_ bool testing::internal::LogIsVisible</definition>
        <argsstring>(LogSeverity severity)</argsstring>
        <name>LogIsVisible</name>
        <param>
          <type>LogSeverity</type>
          <declname>severity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="256" column="17" declfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" declline="256" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1a8a57ce0412334a3f487bbaa8321febbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ void</type>
        <definition>GTEST_API_ void testing::internal::Log</definition>
        <argsstring>(LogSeverity severity, const std::string &amp;message, int stack_frames_to_skip)</argsstring>
        <name>Log</name>
        <param>
          <type>LogSeverity</type>
          <declname>severity</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stack_frames_to_skip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="265" column="17" declfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" declline="265" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1ad4e02ea077a717f95a10a03c10272f1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ <ref refid="classtesting_1_1internal_1_1WithoutMatchers" kindref="compound">WithoutMatchers</ref></type>
        <definition>GTEST_API_ WithoutMatchers testing::internal::GetWithoutMatchers</definition>
        <argsstring>()</argsstring>
        <name>GetWithoutMatchers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="281" column="28" declfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" declline="281" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1a3316c24e8a79f5def3e85d763ae50854" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T testing::internal::Invalid</definition>
        <argsstring>()</argsstring>
        <name>Invalid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="296" column="10" bodyfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" bodystart="296" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1aa67e1e9d28122eedffbb7b6636824f2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ void</type>
        <definition>GTEST_API_ void testing::internal::IllegalDoDefault</definition>
        <argsstring>(const char *file, int line)</argsstring>
        <name>IllegalDoDefault</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="402" column="17" declfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" declline="402" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1a6d3a67138bf4d8de81606b37127509df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
          <param>
            <type>typename Tuple</type>
          </param>
          <param>
            <type>size_t...</type>
            <declname>Idx</declname>
            <defname>Idx</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto testing::internal::ApplyImpl</definition>
        <argsstring>(F &amp;&amp;f, Tuple &amp;&amp;args, IndexSequence&lt; Idx... &gt;) -&gt; decltype(std::forward&lt; F &gt;(f)(std::get&lt; Idx &gt;(std::forward&lt; Tuple &gt;(args))...))</argsstring>
        <name>ApplyImpl</name>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>Tuple &amp;&amp;</type>
          <declname>args</declname>
        </param>
        <param>
          <type><ref refid="structtesting_1_1internal_1_1IndexSequence" kindref="compound">IndexSequence</ref>&lt; Idx... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="405" column="6" bodyfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" bodystart="405" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="gmock-internal-utils_8h_1a4aeac7ea6170d7347ff9212026e115e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
          <param>
            <type>typename Tuple</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto testing::internal::Apply</definition>
        <argsstring>(F &amp;&amp;f, Tuple &amp;&amp;args) -&gt; decltype(ApplyImpl(std::forward&lt; F &gt;(f), std::forward&lt; Tuple &gt;(args), MakeIndexSequence&lt; std::tuple_size&lt; typename std::remove_reference&lt; Tuple &gt;::type &gt;::value &gt;()))</argsstring>
        <name>Apply</name>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>Tuple &amp;&amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" line="412" column="6" bodyfile="/home/jan/packages/elements/include/gmock/internal/gmock-internal-utils.h" bodystart="412" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="gtest-message_8h_1aad4beed95d0846e6ffc5da0978ef3bb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string testing::internal::StreamableToString</definition>
        <argsstring>(const T &amp;streamable)</argsstring>
        <name>StreamableToString</name>
        <param>
          <type>const T &amp;</type>
          <declname>streamable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-message.h" line="210" column="13" bodyfile="/home/jan/packages/elements/include/gtest/gtest-message.h" bodystart="210" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a30708fa2bacf11895b03bdb21eb72309" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::UniversalPrint</definition>
        <argsstring>(const T &amp;value, ::std::ostream *os)</argsstring>
        <name>UniversalPrint</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="976" column="6" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="976" bodyend="981" declfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" declline="123" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1aa287a88fcd0b97a13f7e243bbafe34f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ void</type>
        <definition>GTEST_API_ void testing::internal::PrintBytesInObjectTo</definition>
        <argsstring>(const unsigned char *obj_bytes, size_t count, ::std::ostream *os)</argsstring>
        <name>PrintBytesInObjectTo</name>
        <param>
          <type>const unsigned char *</type>
          <declname>obj_bytes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="263" column="17" declfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" declline="263" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a5e9f744566e02ba3f811cd51d3b8c4fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::PrintWithFallback</definition>
        <argsstring>(const T &amp;value, ::std::ostream *os)</argsstring>
        <name>PrintWithFallback</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="306" column="6" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="306" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a3682f962ae0ec1c0eca6444ca0a09e91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_</definition>
        <argsstring>(char)</argsstring>
        <name>GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_</name>
        <param>
          <type>char</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="359" column="1" declfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" declline="359" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a85e08f00d443221e529a0a85a90fbaeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_</definition>
        <argsstring>(wchar_t)</argsstring>
        <name>GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_</name>
        <param>
          <type>wchar_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="361" column="1" declfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" declline="361" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1ad33ad5ec1d4705104387c526ea7d59f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_</definition>
        <argsstring>(char16_t)</argsstring>
        <name>GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_</name>
        <param>
          <type>char16_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="367" column="1" declfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" declline="367" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a67ea647ee3d547e58db86a9ee2bb797a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_</definition>
        <argsstring>(char32_t)</argsstring>
        <name>GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_</name>
        <param>
          <type>char32_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="369" column="1" declfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" declline="369" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1aeac30230dcc362221bdd07d61eaa4ec1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GTEST_IMPL_FORMAT_C_STRING_AS_STRING_</definition>
        <argsstring>(char, ::std::string)</argsstring>
        <name>GTEST_IMPL_FORMAT_C_STRING_AS_STRING_</name>
        <param>
          <type>char</type>
        </param>
        <param>
          <type>::std::string</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="386" column="1" declfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" declline="386" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1acff745e750898f27701cc96a7238754c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GTEST_IMPL_FORMAT_C_STRING_AS_STRING_</definition>
        <argsstring>(char16_t, ::std::u16string)</argsstring>
        <name>GTEST_IMPL_FORMAT_C_STRING_AS_STRING_</name>
        <param>
          <type>char16_t</type>
        </param>
        <param>
          <type>::std::u16string</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="392" column="1" declfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" declline="392" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a347584b3f2adc08d5e6b45c9004f2c16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GTEST_IMPL_FORMAT_C_STRING_AS_STRING_</definition>
        <argsstring>(char32_t, ::std::u32string)</argsstring>
        <name>GTEST_IMPL_FORMAT_C_STRING_AS_STRING_</name>
        <param>
          <type>char32_t</type>
        </param>
        <param>
          <type>::std::u32string</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="394" column="1" declfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" declline="394" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a91ab078f10adc669f09b7f604975c518" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string testing::internal::FormatForComparisonFailureMessage</definition>
        <argsstring>(const T1 &amp;value, const T2 &amp;)</argsstring>
        <name>FormatForComparisonFailureMessage</name>
        <param>
          <type>const T1 &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const T2 &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="413" column="13" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="413" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1adb3c27150dbe661db0e0c4be27533460" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(const T &amp;value, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="440" column="6" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="440" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1aa7e70a85d66f0c109e3e69629ef577f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ void</type>
        <definition>GTEST_API_ void testing::internal::PrintTo</definition>
        <argsstring>(unsigned char c, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>unsigned char</type>
          <declname>c</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="449" column="17" declfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" declline="449" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1abf6c518b437569187c1218166c702807" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ void</type>
        <definition>GTEST_API_ void testing::internal::PrintTo</definition>
        <argsstring>(signed char c, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>signed char</type>
          <declname>c</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="450" column="17" declfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" declline="450" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a476bd3d411d4f129620aaf8999c257c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(char c, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="451" column="13" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="451" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a2979ac1ad3e05c51dcd7dca2eb34e6ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(bool x, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>bool</type>
          <declname>x</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="459" column="13" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="459" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a6c50fd437a2ae2ff6f182ccd6c2744dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ void</type>
        <definition>GTEST_API_ void testing::internal::PrintTo</definition>
        <argsstring>(wchar_t wc, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>wchar_t</type>
          <declname>wc</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="470" column="17" declfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" declline="470" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a7ffe5a8e9382c5037c20277062918b3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ void</type>
        <definition>GTEST_API_ void testing::internal::PrintTo</definition>
        <argsstring>(char32_t c, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>char32_t</type>
          <declname>c</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="472" column="17" declfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" declline="472" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a652e048970086752066fc943bb676668" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(char16_t c, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>char16_t</type>
          <declname>c</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="473" column="13" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="473" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1ac226053b96d7d61f9407e3b75bab07d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ void</type>
        <definition>GTEST_API_ void testing::internal::PrintTo</definition>
        <argsstring>(const char *s, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="483" column="17" declfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" declline="483" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a553eec7bb50de01c9e91cac4accc606f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(char *s, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="484" column="13" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="484" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a792cc5665a34619ed7a6d54711433456" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(const signed char *s, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>const signed char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="490" column="13" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="490" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a1320096b116f8cc4b688acbd5b783051" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(signed char *s, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>signed char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="493" column="13" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="493" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a42c591f2164ad105b502a9262333aed2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(const unsigned char *s, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>const unsigned char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="496" column="13" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="496" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a7fae797c500d66d0f5a9db4f205e3416" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(unsigned char *s, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>unsigned char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="499" column="13" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="499" bodyend="501"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a7f3f12f7f29d591bca504c6f43f192a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ void</type>
        <definition>GTEST_API_ void testing::internal::PrintTo</definition>
        <argsstring>(const char16_t *s, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>const char16_t *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="510" column="17" declfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" declline="510" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a3d7b09c7d5688f94db5554f0d9f16f35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(char16_t *s, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>char16_t *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="511" column="13" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="511" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a90d42d917e8f0a2cb6c55865d33c8410" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ void</type>
        <definition>GTEST_API_ void testing::internal::PrintTo</definition>
        <argsstring>(const char32_t *s, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>const char32_t *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="515" column="17" declfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" declline="515" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a9bc1e33e81d7eec4fd38a162712c9416" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(char32_t *s, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>char32_t *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="516" column="13" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="516" bodyend="518"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1afb038075e9e2166d1d9158a19e0eed23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ void</type>
        <definition>GTEST_API_ void testing::internal::PrintTo</definition>
        <argsstring>(const wchar_t *s, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>const wchar_t *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="527" column="17" declfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" declline="527" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a8d41baa371fad3eb5a3dbe1bbc02c290" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(wchar_t *s, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>wchar_t *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="528" column="13" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="528" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1ad3013b6b4c825edee9fe18ff1d982faa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::PrintRawArrayTo</definition>
        <argsstring>(const T a[], size_t count, ::std::ostream *os)</argsstring>
        <name>PrintRawArrayTo</name>
        <param>
          <type>const T</type>
          <declname>a</declname>
          <array>[]</array>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="539" column="6" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="539" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a8b53e46cea3f8bdfc9342057c4f6ba62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ void</type>
        <definition>GTEST_API_ void testing::internal::PrintStringTo</definition>
        <argsstring>(const ::std::string &amp;s, ::std::ostream *os)</argsstring>
        <name>PrintStringTo</name>
        <param>
          <type>const ::std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="548" column="17" declfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" declline="548" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1af59b4f5d83276cd807c45063b14bad44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(const ::std::string &amp;s, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>const ::std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="549" column="13" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="549" bodyend="551"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1abcf093a2c7a87703b5288a518b53c842" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ void</type>
        <definition>GTEST_API_ void testing::internal::PrintU16StringTo</definition>
        <argsstring>(const ::std::u16string &amp;s, ::std::ostream *os)</argsstring>
        <name>PrintU16StringTo</name>
        <param>
          <type>const ::std::u16string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="562" column="17" declfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" declline="562" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a07c81c231dcb204cce575a83dc2cf36c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(const ::std::u16string &amp;s, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>const ::std::u16string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="563" column="13" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="563" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a22833e6e7dbdf8d69060775402abed94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ void</type>
        <definition>GTEST_API_ void testing::internal::PrintU32StringTo</definition>
        <argsstring>(const ::std::u32string &amp;s, ::std::ostream *os)</argsstring>
        <name>PrintU32StringTo</name>
        <param>
          <type>const ::std::u32string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="568" column="17" declfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" declline="568" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a19b04c78a00c67cc13ee83584dbcb51c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(const ::std::u32string &amp;s, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>const ::std::u32string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="569" column="13" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="569" bodyend="571"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a76f564cf23190dbd5c9e088defdd092b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(std::nullptr_t, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="588" column="13" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="588" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a5587d09db034bc597870ae86bd8c01f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(std::reference_wrapper&lt; T &gt; ref, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>std::reference_wrapper&lt; T &gt;</type>
          <declname>ref</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="591" column="6" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="591" bodyend="593"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a35e0a60218e5493f06816d1738e71d2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* testing::internal::VoidifyPointer</definition>
        <argsstring>(const void *p)</argsstring>
        <name>VoidifyPointer</name>
        <param>
          <type>const void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="595" column="19" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="595" bodyend="595"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a886046c45bd2b87f0ea85f41d2ef9731" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* testing::internal::VoidifyPointer</definition>
        <argsstring>(volatile const void *p)</argsstring>
        <name>VoidifyPointer</name>
        <param>
          <type>volatile const void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="596" column="19" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="596" bodyend="598"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a525d401614692eb59ffa82e90c7263a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Ptr</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::PrintSmartPointer</definition>
        <argsstring>(const Ptr &amp;ptr, std::ostream *os, char)</argsstring>
        <name>PrintSmartPointer</name>
        <param>
          <type>const Ptr &amp;</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>std::ostream *</type>
          <declname>os</declname>
        </param>
        <param>
          <type>char</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="601" column="6" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="601" bodyend="608"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a06c16d9c3986b3e28d762a56691d7324" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Ptr</type>
          </param>
          <param>
            <type>typename</type>
            <defval>typename std::enable_if&lt;!std::is_void&lt;T&gt;::value &amp;&amp;                                             !std::is_array&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::PrintSmartPointer</definition>
        <argsstring>(const Ptr &amp;ptr, std::ostream *os, int)</argsstring>
        <name>PrintSmartPointer</name>
        <param>
          <type>const Ptr &amp;</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>std::ostream *</type>
          <declname>os</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="612" column="6" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="612" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a4052225063f1c55dd11e929147727038" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(const std::unique_ptr&lt; T, D &gt; &amp;ptr, std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>const std::unique_ptr&lt; T, D &gt; &amp;</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="623" column="6" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="623" bodyend="625"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a536d2062728e1d7b9337c1ba2c283365" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(const std::shared_ptr&lt; T &gt; &amp;ptr, std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>const std::shared_ptr&lt; T &gt; &amp;</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="628" column="6" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="628" bodyend="630"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a7174fbf5d6ba458afae675022c9aae1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::PrintTupleTo</definition>
        <argsstring>(const T &amp;, std::integral_constant&lt; size_t, 0 &gt;, ::std::ostream *)</argsstring>
        <name>PrintTupleTo</name>
        <param>
          <type>const T &amp;</type>
        </param>
        <param>
          <type>std::integral_constant&lt; size_t, 0 &gt;</type>
        </param>
        <param>
          <type>::std::ostream *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="635" column="6" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="635" bodyend="636"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a3580971ab4571dc9a00f4ed0e17fd777" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>I</declname>
            <defname>I</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::PrintTupleTo</definition>
        <argsstring>(const T &amp;t, std::integral_constant&lt; size_t, I &gt;, ::std::ostream *os)</argsstring>
        <name>PrintTupleTo</name>
        <param>
          <type>const T &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>std::integral_constant&lt; size_t, I &gt;</type>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="639" column="6" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="639" bodyend="649"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a5628347cba9a345f56087fdb70930fc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Types</declname>
            <defname>Types</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(const ::std::tuple&lt; Types... &gt; &amp;t, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>const ::std::tuple&lt; Types... &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="652" column="6" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="652" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1af2c33928facbf2edf7af564278724d98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(const ::std::pair&lt; T1, T2 &gt; &amp;value, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>const ::std::pair&lt; T1, T2 &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="660" column="6" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="660" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1ad79d71c3110f8eb24ab352d68f29436a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::UniversalPrintArray</definition>
        <argsstring>(const T *begin, size_t len, ::std::ostream *os)</argsstring>
        <name>UniversalPrintArray</name>
        <param>
          <type>const T *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="784" column="6" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="784" bodyend="803"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a72c997dbd2c562110b2cb56c359decfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ void</type>
        <definition>GTEST_API_ void testing::internal::UniversalPrintArray</definition>
        <argsstring>(const char *begin, size_t len, ::std::ostream *os)</argsstring>
        <name>UniversalPrintArray</name>
        <param>
          <type>const char *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="805" column="17" declfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" declline="805" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a837b7854d2561b755b90385d029097d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ void</type>
        <definition>GTEST_API_ void testing::internal::UniversalPrintArray</definition>
        <argsstring>(const char16_t *begin, size_t len, ::std::ostream *os)</argsstring>
        <name>UniversalPrintArray</name>
        <param>
          <type>const char16_t *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="815" column="17" declfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" declline="815" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1adae08a05fbb646ff85eb6225f85cafbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ void</type>
        <definition>GTEST_API_ void testing::internal::UniversalPrintArray</definition>
        <argsstring>(const char32_t *begin, size_t len, ::std::ostream *os)</argsstring>
        <name>UniversalPrintArray</name>
        <param>
          <type>const char32_t *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="819" column="17" declfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" declline="819" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1ae31e146c35fd75afc6a9cc73ae2692d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ void</type>
        <definition>GTEST_API_ void testing::internal::UniversalPrintArray</definition>
        <argsstring>(const wchar_t *begin, size_t len, ::std::ostream *os)</argsstring>
        <name>UniversalPrintArray</name>
        <param>
          <type>const wchar_t *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="823" column="17" declfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" declline="823" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1afa92f5a284929dc3723e654a25feb7b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::UniversalTersePrint</definition>
        <argsstring>(const T &amp;value, ::std::ostream *os)</argsstring>
        <name>UniversalTersePrint</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="967" column="6" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="967" bodyend="969"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a6300aa1440d0019cf08d9a1f6efd4382" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Tuple</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::TersePrintPrefixToStrings</definition>
        <argsstring>(const Tuple &amp;, std::integral_constant&lt; size_t, 0 &gt;, Strings *)</argsstring>
        <name>TersePrintPrefixToStrings</name>
        <param>
          <type>const Tuple &amp;</type>
        </param>
        <param>
          <type>std::integral_constant&lt; size_t, 0 &gt;</type>
        </param>
        <param>
          <type>Strings *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="988" column="6" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="988" bodyend="989"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1ab244273c02742a3fac45cc241befc536" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Tuple</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>I</declname>
            <defname>I</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::TersePrintPrefixToStrings</definition>
        <argsstring>(const Tuple &amp;t, std::integral_constant&lt; size_t, I &gt;, Strings *strings)</argsstring>
        <name>TersePrintPrefixToStrings</name>
        <param>
          <type>const Tuple &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>std::integral_constant&lt; size_t, I &gt;</type>
        </param>
        <param>
          <type>Strings *</type>
          <declname>strings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="991" column="6" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="991" bodyend="999"/>
      </memberdef>
      <memberdef kind="function" id="gtest-printers_8h_1a7e60d1478b074801c766eeee9be6c772" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Tuple</type>
          </param>
        </templateparamlist>
        <type>Strings</type>
        <definition>Strings testing::internal::UniversalTersePrintTupleFieldsToStrings</definition>
        <argsstring>(const Tuple &amp;value)</argsstring>
        <name>UniversalTersePrintTupleFieldsToStrings</name>
        <param>
          <type>const Tuple &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest-printers.h" line="1005" column="9" bodyfile="/home/jan/packages/elements/include/gtest/gtest-printers.h" bodystart="1005" bodyend="1011"/>
      </memberdef>
      <memberdef kind="function" id="gtest_8h_1a1def8ec9393360a1b34a20528703e7f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>AssertionResult</type>
        <definition>AssertionResult testing::internal::CmpHelperEQFailure</definition>
        <argsstring>(const char *lhs_expression, const char *rhs_expression, const T1 &amp;lhs, const T2 &amp;rhs)</argsstring>
        <name>CmpHelperEQFailure</name>
        <param>
          <type>const char *</type>
          <declname>lhs_expression</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rhs_expression</declname>
        </param>
        <param>
          <type>const T1 &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const T2 &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest.h" line="1522" column="17" bodyfile="/home/jan/packages/elements/include/gtest/gtest.h" bodystart="1522" bodyend="1530"/>
      </memberdef>
      <memberdef kind="function" id="gtest_8h_1a5e3e473798de3189e9343132bcfd4fea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::operator==</definition>
        <argsstring>(faketype, faketype)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="structtesting_1_1internal_1_1faketype" kindref="compound">faketype</ref></type>
        </param>
        <param>
          <type><ref refid="structtesting_1_1internal_1_1faketype" kindref="compound">faketype</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest.h" line="1536" column="13" bodyfile="/home/jan/packages/elements/include/gtest/gtest.h" bodystart="1536" bodyend="1536"/>
      </memberdef>
      <memberdef kind="function" id="gtest_8h_1afa44fdec84edfc155ef63e4f0d4287cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::operator!=</definition>
        <argsstring>(faketype, faketype)</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="structtesting_1_1internal_1_1faketype" kindref="compound">faketype</ref></type>
        </param>
        <param>
          <type><ref refid="structtesting_1_1internal_1_1faketype" kindref="compound">faketype</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest.h" line="1537" column="13" bodyfile="/home/jan/packages/elements/include/gtest/gtest.h" bodystart="1537" bodyend="1537"/>
      </memberdef>
      <memberdef kind="function" id="gtest_8h_1a4638c74d9b32e971f9b321af6fafc2f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>AssertionResult</type>
        <definition>AssertionResult testing::internal::CmpHelperEQ</definition>
        <argsstring>(const char *lhs_expression, const char *rhs_expression, const T1 &amp;lhs, const T2 &amp;rhs)</argsstring>
        <name>CmpHelperEQ</name>
        <param>
          <type>const char *</type>
          <declname>lhs_expression</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rhs_expression</declname>
        </param>
        <param>
          <type>const T1 &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const T2 &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest.h" line="1541" column="17" bodyfile="/home/jan/packages/elements/include/gtest/gtest.h" bodystart="1541" bodyend="1550"/>
      </memberdef>
      <memberdef kind="function" id="gtest_8h_1a894ffccd936d78fd555f490020c27f0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>AssertionResult</type>
        <definition>AssertionResult testing::internal::CmpHelperOpFailure</definition>
        <argsstring>(const char *expr1, const char *expr2, const T1 &amp;val1, const T2 &amp;val2, const char *op)</argsstring>
        <name>CmpHelperOpFailure</name>
        <param>
          <type>const char *</type>
          <declname>expr1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>expr2</declname>
        </param>
        <param>
          <type>const T1 &amp;</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>const T2 &amp;</type>
          <declname>val2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest.h" line="1595" column="17" bodyfile="/home/jan/packages/elements/include/gtest/gtest.h" bodystart="1595" bodyend="1602"/>
      </memberdef>
      <memberdef kind="function" id="gtest_8h_1a93eb9d61cac7faf1faff6301ae5f4a46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ AssertionResult</type>
        <definition>GTEST_API_ AssertionResult testing::internal::CmpHelperSTREQ</definition>
        <argsstring>(const char *s1_expression, const char *s2_expression, const char *s1, const char *s2)</argsstring>
        <name>CmpHelperSTREQ</name>
        <param>
          <type>const char *</type>
          <declname>s1_expression</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2_expression</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest.h" line="1639" column="28" declfile="/home/jan/packages/elements/include/gtest/gtest.h" declline="1639" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="gtest_8h_1a00c3d012df6173622ef558a131bfb95d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ AssertionResult</type>
        <definition>GTEST_API_ AssertionResult testing::internal::CmpHelperSTRCASEEQ</definition>
        <argsstring>(const char *s1_expression, const char *s2_expression, const char *s1, const char *s2)</argsstring>
        <name>CmpHelperSTRCASEEQ</name>
        <param>
          <type>const char *</type>
          <declname>s1_expression</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2_expression</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest.h" line="1647" column="28" declfile="/home/jan/packages/elements/include/gtest/gtest.h" declline="1647" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="gtest_8h_1a6b485231a046ff760844a0321c04870b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ AssertionResult</type>
        <definition>GTEST_API_ AssertionResult testing::internal::CmpHelperSTRNE</definition>
        <argsstring>(const char *s1_expression, const char *s2_expression, const char *s1, const char *s2)</argsstring>
        <name>CmpHelperSTRNE</name>
        <param>
          <type>const char *</type>
          <declname>s1_expression</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2_expression</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest.h" line="1655" column="28" declfile="/home/jan/packages/elements/include/gtest/gtest.h" declline="1655" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="gtest_8h_1a5f74b933606b0a742cd5a8ad2d7087e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ AssertionResult</type>
        <definition>GTEST_API_ AssertionResult testing::internal::CmpHelperSTRCASENE</definition>
        <argsstring>(const char *s1_expression, const char *s2_expression, const char *s1, const char *s2)</argsstring>
        <name>CmpHelperSTRCASENE</name>
        <param>
          <type>const char *</type>
          <declname>s1_expression</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2_expression</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest.h" line="1663" column="28" declfile="/home/jan/packages/elements/include/gtest/gtest.h" declline="1663" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="gtest_8h_1ad40d557f9c157790160d6e4f2b0d9bab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ AssertionResult</type>
        <definition>GTEST_API_ AssertionResult testing::internal::CmpHelperSTREQ</definition>
        <argsstring>(const char *s1_expression, const char *s2_expression, const wchar_t *s1, const wchar_t *s2)</argsstring>
        <name>CmpHelperSTREQ</name>
        <param>
          <type>const char *</type>
          <declname>s1_expression</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2_expression</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest.h" line="1672" column="28" declfile="/home/jan/packages/elements/include/gtest/gtest.h" declline="1672" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="gtest_8h_1a6e700804399b6694d8d6157e3a141b17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ AssertionResult</type>
        <definition>GTEST_API_ AssertionResult testing::internal::CmpHelperSTRNE</definition>
        <argsstring>(const char *s1_expression, const char *s2_expression, const wchar_t *s1, const wchar_t *s2)</argsstring>
        <name>CmpHelperSTRNE</name>
        <param>
          <type>const char *</type>
          <declname>s1_expression</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2_expression</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest.h" line="1680" column="28" declfile="/home/jan/packages/elements/include/gtest/gtest.h" declline="1680" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="gtest_8h_1a98ce463e5dbe0c6120fa817e1f8f2944" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename RawType</type>
          </param>
        </templateparamlist>
        <type>AssertionResult</type>
        <definition>AssertionResult testing::internal::CmpHelperFloatingPointEQ</definition>
        <argsstring>(const char *lhs_expression, const char *rhs_expression, RawType lhs_value, RawType rhs_value)</argsstring>
        <name>CmpHelperFloatingPointEQ</name>
        <param>
          <type>const char *</type>
          <declname>lhs_expression</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rhs_expression</declname>
        </param>
        <param>
          <type>RawType</type>
          <declname>lhs_value</declname>
        </param>
        <param>
          <type>RawType</type>
          <declname>rhs_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest.h" line="1733" column="17" bodyfile="/home/jan/packages/elements/include/gtest/gtest.h" bodystart="1733" bodyend="1756"/>
      </memberdef>
      <memberdef kind="function" id="gtest_8h_1aea60207c4cedc8946a70ada62e38da8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ AssertionResult</type>
        <definition>GTEST_API_ AssertionResult testing::internal::DoubleNearPredFormat</definition>
        <argsstring>(const char *expr1, const char *expr2, const char *abs_error_expr, double val1, double val2, double abs_error)</argsstring>
        <name>DoubleNearPredFormat</name>
        <param>
          <type>const char *</type>
          <declname>expr1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>expr2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>abs_error_expr</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>abs_error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/gtest.h" line="1761" column="28" declfile="/home/jan/packages/elements/include/gtest/gtest.h" declline="1761" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="gtest-death-test-internal_8h_1ac20f635c3285878fc1195ce687f23950" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GTEST_DECLARE_string_</definition>
        <argsstring>(internal_run_death_test)</argsstring>
        <name>GTEST_DECLARE_string_</name>
        <param>
          <type>internal_run_death_test</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-death-test-internal.h" line="48" column="1" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-death-test-internal.h" declline="48" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1af69e146a989e8d48def39a0cc59461c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ std::string</type>
        <definition>GTEST_API_ std::string testing::internal::AppendUserMessage</definition>
        <argsstring>(const std::string &amp;gtest_msg, const Message &amp;user_msg)</argsstring>
        <name>AppendUserMessage</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>gtest_msg</declname>
        </param>
        <param>
          <type>const <ref refid="classtesting_1_1Message" kindref="compound">Message</ref> &amp;</type>
          <declname>user_msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="139" column="24" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" declline="139" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1a513107ff8defa97d949937fc1350a56c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ std::string</type>
        <definition>GTEST_API_ std::string testing::internal::DiffStrings</definition>
        <argsstring>(const std::string &amp;left, const std::string &amp;right, size_t *total_line_count)</argsstring>
        <name>DiffStrings</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>right</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>total_line_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="188" column="24" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" declline="188" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1ac61e2ba2cbf259fd6ee5ffd4e49c9445" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ AssertionResult</type>
        <definition>GTEST_API_ AssertionResult testing::internal::EqFailure</definition>
        <argsstring>(const char *expected_expression, const char *actual_expression, const std::string &amp;expected_value, const std::string &amp;actual_value, bool ignoring_case)</argsstring>
        <name>EqFailure</name>
        <param>
          <type>const char *</type>
          <declname>expected_expression</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>actual_expression</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>expected_value</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>actual_value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ignoring_case</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="207" column="28" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" declline="207" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1aed8d3ad4341f8f2de53440e39c995632" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ std::string</type>
        <definition>GTEST_API_ std::string testing::internal::GetBoolAssertionFailureMessage</definition>
        <argsstring>(const AssertionResult &amp;assertion_result, const char *expression_text, const char *actual_predicate_value, const char *expected_predicate_value)</argsstring>
        <name>GetBoolAssertionFailureMessage</name>
        <param>
          <type>const AssertionResult &amp;</type>
          <declname>assertion_result</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>expression_text</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>actual_predicate_value</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>expected_predicate_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="214" column="24" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" declline="214" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1a6b108e56fdc68ea937ffb3759fb55ab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>TypeId</type>
        <definition>TypeId testing::internal::GetTypeId</definition>
        <argsstring>()</argsstring>
        <name>GetTypeId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="435" column="8" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="435" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1a1e85cf16bb95b60f879d48ba1fbfc1c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ TypeId</type>
        <definition>GTEST_API_ TypeId testing::internal::GetTestTypeId</definition>
        <argsstring>()</argsstring>
        <name>GetTestTypeId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="448" column="19" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" declline="448" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1a9579a78c229ea302caded45d65f77336" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>SetUpTearDownSuiteFuncType</type>
        <definition>SetUpTearDownSuiteFuncType testing::internal::GetNotDefaultOrNull</definition>
        <argsstring>(SetUpTearDownSuiteFuncType a, SetUpTearDownSuiteFuncType def)</argsstring>
        <name>GetNotDefaultOrNull</name>
        <param>
          <type>SetUpTearDownSuiteFuncType</type>
          <declname>a</declname>
        </param>
        <param>
          <type>SetUpTearDownSuiteFuncType</type>
          <declname>def</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="506" column="35" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="506" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1a7ab4072540184e26119ad853f45059f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ <ref refid="classtesting_1_1TestInfo" kindref="compound">TestInfo</ref> *</type>
        <definition>GTEST_API_ TestInfo* testing::internal::MakeAndRegisterTestInfo</definition>
        <argsstring>(const char *test_suite_name, const char *name, const char *type_param, const char *value_param, CodeLocation code_location, TypeId fixture_class_id, SetUpTestSuiteFunc set_up_tc, TearDownTestSuiteFunc tear_down_tc, TestFactoryBase *factory)</argsstring>
        <name>MakeAndRegisterTestInfo</name>
        <param>
          <type>const char *</type>
          <declname>test_suite_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>type_param</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value_param</declname>
        </param>
        <param>
          <type><ref refid="structtesting_1_1internal_1_1CodeLocation" kindref="compound">CodeLocation</ref></type>
          <declname>code_location</declname>
        </param>
        <param>
          <type>TypeId</type>
          <declname>fixture_class_id</declname>
        </param>
        <param>
          <type>SetUpTestSuiteFunc</type>
          <declname>set_up_tc</declname>
        </param>
        <param>
          <type>TearDownTestSuiteFunc</type>
          <declname>tear_down_tc</declname>
        </param>
        <param>
          <type><ref refid="classtesting_1_1internal_1_1TestFactoryBase" kindref="compound">TestFactoryBase</ref> *</type>
          <declname>factory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="582" column="21" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" declline="582" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1aac72b20299ad4a99554ce161e1769560" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ bool</type>
        <definition>GTEST_API_ bool testing::internal::SkipPrefix</definition>
        <argsstring>(const char *prefix, const char **pstr)</argsstring>
        <name>SkipPrefix</name>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>pstr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="591" column="17" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" declline="591" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1a2c5082b8e3ad1fab3ebb45222467fe48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GTEST_DISABLE_MSC_WARNINGS_PUSH_</definition>
        <argsstring>(4251) class GTEST_API_ TypedTestSuitePState</argsstring>
        <name>GTEST_DISABLE_MSC_WARNINGS_PUSH_</name>
        <param>
          <type>4251</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="593" column="1" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="593" bodyend="641"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1ac75042a7b6b772715e03e95851a592a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GTEST_DISABLE_MSC_WARNINGS_POP_</definition>
        <argsstring>() inline const char *SkipComma(const char *str)</argsstring>
        <name>GTEST_DISABLE_MSC_WARNINGS_POP_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="648" column="1" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="648" bodyend="659"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1a42d633fb359d696157347720aa0ff66c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string testing::internal::GetPrefixUntilComma</definition>
        <argsstring>(const char *str)</argsstring>
        <name>GetPrefixUntilComma</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="663" column="20" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="663" bodyend="666"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1a8eb8eddf760375a490e007b20777ec56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::SplitString</definition>
        <argsstring>(const ::std::string &amp;str, char delimiter, ::std::vector&lt; ::std::string &gt; *dest)</argsstring>
        <name>SplitString</name>
        <param>
          <type>const ::std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char</type>
          <declname>delimiter</declname>
        </param>
        <param>
          <type>::std::vector&lt; ::std::string &gt; *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="670" column="6" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" declline="670" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1a25a7b3be9ed6341d6541a2516c075b61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename NameGenerator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::GenerateNamesRecursively</definition>
        <argsstring>(internal::None, std::vector&lt; std::string &gt; *, int)</argsstring>
        <name>GenerateNamesRecursively</name>
        <param>
          <type><ref refid="structtesting_1_1internal_1_1None" kindref="compound">internal::None</ref></type>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; *</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="688" column="6" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="688" bodyend="688"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1aa4a75b663db15988d84f0b918d3dc167" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename NameGenerator</type>
          </param>
          <param>
            <type>typename Types</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::GenerateNamesRecursively</definition>
        <argsstring>(Types, std::vector&lt; std::string &gt; *result, int i)</argsstring>
        <name>GenerateNamesRecursively</name>
        <param>
          <type><ref refid="structtesting_1_1internal_1_1Types" kindref="compound">Types</ref></type>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; *</type>
          <declname>result</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="691" column="6" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="691" bodyend="695"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1a864ef450d21a02d66f9854b9a1c8c37c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename NameGenerator</type>
          </param>
          <param>
            <type>typename Types</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; testing::internal::GenerateNames</definition>
        <argsstring>()</argsstring>
        <name>GenerateNames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="698" column="13" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="698" bodyend="702"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1aa827f975e55866cae69555d960ebf4b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ void</type>
        <definition>GTEST_API_ void testing::internal::RegisterTypeParameterizedTestSuite</definition>
        <argsstring>(const char *test_suite_name, CodeLocation code_location)</argsstring>
        <name>RegisterTypeParameterizedTestSuite</name>
        <param>
          <type>const char *</type>
          <declname>test_suite_name</declname>
        </param>
        <param>
          <type><ref refid="structtesting_1_1internal_1_1CodeLocation" kindref="compound">CodeLocation</ref></type>
          <declname>code_location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="766" column="17" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" declline="766" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1a7f69954b30eba7df21233417fd0c242a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ void</type>
        <definition>GTEST_API_ void testing::internal::RegisterTypeParameterizedTestSuiteInstantiation</definition>
        <argsstring>(const char *case_name)</argsstring>
        <name>RegisterTypeParameterizedTestSuiteInstantiation</name>
        <param>
          <type>const char *</type>
          <declname>case_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="768" column="17" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" declline="768" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1ae7ae495d3207e26968dfbd537c5e6dee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ std::string</type>
        <definition>GTEST_API_ std::string testing::internal::GetCurrentOsStackTraceExceptTop</definition>
        <argsstring>(UnitTest *unit_test, int skip_count)</argsstring>
        <name>GetCurrentOsStackTraceExceptTop</name>
        <param>
          <type><ref refid="classtesting_1_1UnitTest" kindref="compound">UnitTest</ref> *</type>
          <declname>unit_test</declname>
        </param>
        <param>
          <type>int</type>
          <declname>skip_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="834" column="24" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" declline="834" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1a4d46f09c3bfe68700b7f728d2cc3782f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ bool</type>
        <definition>GTEST_API_ bool testing::internal::AlwaysTrue</definition>
        <argsstring>()</argsstring>
        <name>AlwaysTrue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="841" column="17" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" declline="841" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1a4b24c851ab13569b1b15b3d259b60d2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::AlwaysFalse</definition>
        <argsstring>()</argsstring>
        <name>AlwaysFalse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="844" column="13" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="844" bodyend="844"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1a764748b94f628bdd1dcd39dc81e8b71f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class C</type>
          </param>
          <param>
            <type>class Iterator</type>
            <defval>decltype(::std::declval&lt;const C&amp;&gt;().begin())</defval>
          </param>
          <param>
            <type>class</type>
            <defval>decltype(::std::declval&lt;const C&amp;&gt;().end())</defval>
          </param>
          <param>
            <type>class</type>
            <defval>decltype(++::std::declval&lt;Iterator&amp;&gt;())</defval>
          </param>
          <param>
            <type>class</type>
            <defval>decltype(*::std::declval&lt;Iterator&gt;())</defval>
          </param>
          <param>
            <type>class</type>
            <defval>typename C::const_iterator</defval>
          </param>
        </templateparamlist>
        <type>IsContainer</type>
        <definition>IsContainer testing::internal::IsContainerTest</definition>
        <argsstring>(int)</argsstring>
        <name>IsContainerTest</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="951" column="13" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="951" bodyend="953"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1af545a2ae928b8a9e7581978234464275" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class C</type>
          </param>
        </templateparamlist>
        <type>IsNotContainer</type>
        <definition>IsNotContainer testing::internal::IsContainerTest</definition>
        <argsstring>(long)</argsstring>
        <name>IsContainerTest</name>
        <param>
          <type>long</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="957" column="16" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="957" bodyend="957"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1af4bebf36baf0b0a5b26d051dde55fa47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool testing::internal::ArrayEq</definition>
        <argsstring>(const T *lhs, size_t size, const U *rhs)</argsstring>
        <name>ArrayEq</name>
        <param>
          <type>const T *</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const U *</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="1032" column="6" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="1032" bodyend="1038" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" declline="1016" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1a49b4d0ee49c0f8c93bab29ebd20630cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool testing::internal::ArrayEq</definition>
        <argsstring>(const T &amp;lhs, const U &amp;rhs)</argsstring>
        <name>ArrayEq</name>
        <param>
          <type>const T &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const U &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="1020" column="13" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="1020" bodyend="1020"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1a5cb6f81ee827130024261121c742b26c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool testing::internal::ArrayEq</definition>
        <argsstring>(const T(&amp;lhs)[N], const U(&amp;rhs)[N])</argsstring>
        <name>ArrayEq</name>
        <param>
          <type>const T(&amp;)</type>
          <declname>lhs</declname>
          <array>[N]</array>
        </param>
        <param>
          <type>const U(&amp;)</type>
          <declname>rhs</declname>
          <array>[N]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="1024" column="13" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="1024" bodyend="1026"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1a94a857fe6ff32cf4fdc4769a4071f239" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Iter</type>
          </param>
          <param>
            <type>typename Element</type>
          </param>
        </templateparamlist>
        <type>Iter</type>
        <definition>Iter testing::internal::ArrayAwareFind</definition>
        <argsstring>(Iter begin, Iter end, const Element &amp;elem)</argsstring>
        <name>ArrayAwareFind</name>
        <param>
          <type>Iter</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>Iter</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const Element &amp;</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="1043" column="6" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="1043" bodyend="1049"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1afb1b9728aaaf6d9fe6246a19cfe3f7f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::CopyArray</definition>
        <argsstring>(const T *from, size_t size, U *to)</argsstring>
        <name>CopyArray</name>
        <param>
          <type>const T *</type>
          <declname>from</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>U *</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="1072" column="6" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="1072" bodyend="1076" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" declline="1056" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1a84d0e746ba0827cc52b53d22000de0e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::CopyArray</definition>
        <argsstring>(const T &amp;from, U *to)</argsstring>
        <name>CopyArray</name>
        <param>
          <type>const T &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>U *</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="1060" column="13" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="1060" bodyend="1060"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1a1e7ae855686720615dcd5754c8181c62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::CopyArray</definition>
        <argsstring>(const T(&amp;from)[N], U(*to)[N])</argsstring>
        <name>CopyArray</name>
        <param>
          <type>const T(&amp;)</type>
          <declname>from</declname>
          <array>[N]</array>
        </param>
        <param>
          <type>U(*)</type>
          <declname>to</declname>
          <array>[N]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="1064" column="13" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="1064" bodyend="1066"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1ac57c9bf3c92c207ba11b83ce05d0359a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GTEST_INTERNAL_DEPRECATED</definition>
        <argsstring>(&quot;INSTANTIATE_TEST_CASE_P is deprecated, please use &quot; &quot;INSTANTIATE_TEST_SUITE_P&quot;) const expr bool InstantiateTestCase_P_IsDeprecated()</argsstring>
        <name>GTEST_INTERNAL_DEPRECATED</name>
        <param>
          <type>&quot;INSTANTIATE_TEST_CASE_P is</type>
          <declname>deprecated</declname>
        </param>
        <param>
          <type>please use &quot; &quot;INSTANTIATE_TEST_SUITE_P&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="1294" column="1" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="1294" bodyend="1297"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1ac2bac410cd8b9ecbc8f4ccc921e61cee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GTEST_INTERNAL_DEPRECATED</definition>
        <argsstring>(&quot;TYPED_TEST_CASE_P is deprecated, please use &quot; &quot;TYPED_TEST_SUITE_P&quot;) const expr bool TypedTestCase_P_IsDeprecated()</argsstring>
        <name>GTEST_INTERNAL_DEPRECATED</name>
        <param>
          <type>&quot;TYPED_TEST_CASE_P is</type>
          <declname>deprecated</declname>
        </param>
        <param>
          <type>please use &quot; &quot;TYPED_TEST_SUITE_P&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="1299" column="1" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="1299" bodyend="1302"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1ac7c25a00ce37b8f6c7ea16814233b281" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GTEST_INTERNAL_DEPRECATED</definition>
        <argsstring>(&quot;TYPED_TEST_CASE is deprecated, please use &quot; &quot;TYPED_TEST_SUITE&quot;) const expr bool TypedTestCaseIsDeprecated()</argsstring>
        <name>GTEST_INTERNAL_DEPRECATED</name>
        <param>
          <type>&quot;TYPED_TEST_CASE is</type>
          <declname>deprecated</declname>
        </param>
        <param>
          <type>please use &quot; &quot;TYPED_TEST_SUITE&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="1304" column="1" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="1304" bodyend="1307"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1ad10c37bd148fb8988a1d99e127891203" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GTEST_INTERNAL_DEPRECATED</definition>
        <argsstring>(&quot;REGISTER_TYPED_TEST_CASE_P is deprecated, please use &quot; &quot;REGISTER_TYPED_TEST_SUITE_P&quot;) const expr bool RegisterTypedTestCase_P_IsDeprecated()</argsstring>
        <name>GTEST_INTERNAL_DEPRECATED</name>
        <param>
          <type>&quot;REGISTER_TYPED_TEST_CASE_P is</type>
          <declname>deprecated</declname>
        </param>
        <param>
          <type>please use &quot; &quot;REGISTER_TYPED_TEST_SUITE_P&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="1309" column="1" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="1309" bodyend="1312"/>
      </memberdef>
      <memberdef kind="function" id="gtest-internal_8h_1ab9dabaaecfb36c469b3382a169a581db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GTEST_INTERNAL_DEPRECATED</definition>
        <argsstring>(&quot;INSTANTIATE_TYPED_TEST_CASE_P is deprecated, please use &quot; &quot;INSTANTIATE_TYPED_TEST_SUITE_P&quot;) const expr bool InstantiateTypedTestCase_P_IsDeprecated()</argsstring>
        <name>GTEST_INTERNAL_DEPRECATED</name>
        <param>
          <type>&quot;INSTANTIATE_TYPED_TEST_CASE_P is</type>
          <declname>deprecated</declname>
        </param>
        <param>
          <type>please use &quot; &quot;INSTANTIATE_TYPED_TEST_SUITE_P&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" line="1314" column="1" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-internal.h" bodystart="1314" bodyend="1317"/>
      </memberdef>
      <memberdef kind="function" id="gtest-param-util_8h_1a5d3e97443d23bf1824f87feb172efd39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ void</type>
        <definition>GTEST_API_ void testing::internal::ReportInvalidTestSuiteType</definition>
        <argsstring>(const char *test_suite_name, CodeLocation code_location)</argsstring>
        <name>ReportInvalidTestSuiteType</name>
        <param>
          <type>const char *</type>
          <declname>test_suite_name</declname>
        </param>
        <param>
          <type><ref refid="structtesting_1_1internal_1_1CodeLocation" kindref="compound">CodeLocation</ref></type>
          <declname>code_location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-param-util.h" line="84" column="17" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-param-util.h" declline="84" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="gtest-param-util_8h_1a954ec4a8a932dac7743e77e459ffefdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ParamType</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string testing::internal::DefaultParamName</definition>
        <argsstring>(const TestParamInfo&lt; ParamType &gt; &amp;info)</argsstring>
        <name>DefaultParamName</name>
        <param>
          <type>const <ref refid="structtesting_1_1TestParamInfo" kindref="compound">TestParamInfo</ref>&lt; ParamType &gt; &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-param-util.h" line="376" column="13" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-param-util.h" bodystart="376" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="gtest-param-util_8h_1aa07a04b597551a51d862911b22a94eb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
            <defval>int</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::TestNotEmpty</definition>
        <argsstring>()</argsstring>
        <name>TestNotEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-param-util.h" line="383" column="6" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-param-util.h" bodystart="383" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="gtest-param-util_8h_1ad2f14c6dc7d6c3d78884910943e11bc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
            <defval>int</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::TestNotEmpty</definition>
        <argsstring>(const T &amp;)</argsstring>
        <name>TestNotEmpty</name>
        <param>
          <type>const T &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-param-util.h" line="387" column="6" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-param-util.h" bodystart="387" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="gtest-param-util_8h_1abdf7564c1ffdc173a52ba97baec4551a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ void</type>
        <definition>GTEST_API_ void testing::internal::InsertSyntheticTestCase</definition>
        <argsstring>(const std::string &amp;name, CodeLocation location, bool has_test_p)</argsstring>
        <name>InsertSyntheticTestCase</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="structtesting_1_1internal_1_1CodeLocation" kindref="compound">CodeLocation</ref></type>
          <declname>location</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_test_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-param-util.h" line="485" column="17" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-param-util.h" declline="485" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1ab2709373c78eb8b1c22a6ba30cceba52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ bool</type>
        <definition>GTEST_API_ bool testing::internal::IsTrue</definition>
        <argsstring>(bool condition)</argsstring>
        <name>IsTrue</name>
        <param>
          <type>bool</type>
          <declname>condition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="883" column="17" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" declline="883" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1aea0ca448425df26e868a7d9447b9b7a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ ::std::string</type>
        <definition>GTEST_API_ ::std::string testing::internal::FormatFileLocation</definition>
        <argsstring>(const char *file, int line)</argsstring>
        <name>FormatFileLocation</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="943" column="26" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" declline="943" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1a882004bab0e3f0d1e9c913ae4e7fae50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ ::std::string</type>
        <definition>GTEST_API_ ::std::string testing::internal::FormatCompilerIndependentFileLocation</definition>
        <argsstring>(const char *file, int line)</argsstring>
        <name>FormatCompilerIndependentFileLocation</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="948" column="26" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" declline="948" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1a06b1b20029fbd1dbeb59752f914fab84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::LogToStderr</definition>
        <argsstring>()</argsstring>
        <name>LogToStderr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="988" column="13" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" bodystart="988" bodyend="988"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1a2135f223bf6b527729aeaa651115183b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::FlushInfoLog</definition>
        <argsstring>()</argsstring>
        <name>FlushInfoLog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="989" column="13" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" bodystart="989" bodyend="989"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1a982df3f369643b175f79cda4048bc3b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename To</type>
          </param>
        </templateparamlist>
        <type>To</type>
        <definition>To testing::internal::ImplicitCast_</definition>
        <argsstring>(To x)</argsstring>
        <name>ImplicitCast_</name>
        <param>
          <type>To</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="1067" column="11" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" bodystart="1067" bodyend="1067"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1a1a1a1aed3fe00908b8a45d5ab4a33665" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename To</type>
          </param>
          <param>
            <type>typename From</type>
          </param>
        </templateparamlist>
        <type>To</type>
        <definition>To testing::internal::DownCast_</definition>
        <argsstring>(From *f)</argsstring>
        <name>DownCast_</name>
        <param>
          <type>From *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="1091" column="11" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" bodystart="1091" bodyend="1108"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1abfe9bfb020d38aa4e0e12c001911b22b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Derived</type>
          </param>
          <param>
            <type>class Base</type>
          </param>
        </templateparamlist>
        <type>Derived *</type>
        <definition>Derived* testing::internal::CheckedDowncastToActualType</definition>
        <argsstring>(Base *base)</argsstring>
        <name>CheckedDowncastToActualType</name>
        <param>
          <type>Base *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="1116" column="9" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" bodystart="1116" bodyend="1128"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1acba06d4f0343dec407738ba5544af990" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ void</type>
        <definition>GTEST_API_ void testing::internal::CaptureStdout</definition>
        <argsstring>()</argsstring>
        <name>CaptureStdout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="1138" column="17" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" declline="1138" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1aed657219a9856a8d249a3230de0c54ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ std::string</type>
        <definition>GTEST_API_ std::string testing::internal::GetCapturedStdout</definition>
        <argsstring>()</argsstring>
        <name>GetCapturedStdout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="1139" column="24" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" declline="1139" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1a8ec00d458d0d442bd64af7b5f9c22dda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ void</type>
        <definition>GTEST_API_ void testing::internal::CaptureStderr</definition>
        <argsstring>()</argsstring>
        <name>CaptureStderr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="1140" column="17" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" declline="1140" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1a374156401da17704099d0c33fa53adfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ std::string</type>
        <definition>GTEST_API_ std::string testing::internal::GetCapturedStderr</definition>
        <argsstring>()</argsstring>
        <name>GetCapturedStderr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="1141" column="24" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" declline="1141" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1a40bcfd87e26aae36e0cc51e5db64fd89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ size_t</type>
        <definition>GTEST_API_ size_t testing::internal::GetFileSize</definition>
        <argsstring>(FILE *file)</argsstring>
        <name>GetFileSize</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="1145" column="19" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" declline="1145" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1ab81b0af2a0131ea54dc11de00d5e6e51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ std::string</type>
        <definition>GTEST_API_ std::string testing::internal::ReadEntireFile</definition>
        <argsstring>(FILE *file)</argsstring>
        <name>ReadEntireFile</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="1148" column="24" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" declline="1148" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1a8d8ed3acadedd9c0db28d35a188973ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ std::vector&lt; std::string &gt;</type>
        <definition>GTEST_API_ std::vector&lt;std::string&gt; testing::internal::GetArgvs</definition>
        <argsstring>()</argsstring>
        <name>GetArgvs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="1151" column="24" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" declline="1151" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1a8cbd8bf820517923d7f3c4477b3af5fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ size_t</type>
        <definition>GTEST_API_ size_t testing::internal::GetThreadCount</definition>
        <argsstring>()</argsstring>
        <name>GetThreadCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="1905" column="19" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" declline="1905" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1aeb957087fd6bbf9db98ab7cd41b0c129" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::IsAlpha</definition>
        <argsstring>(char ch)</argsstring>
        <name>IsAlpha</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="1922" column="13" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" bodystart="1922" bodyend="1924"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1a83802e7f23324cd512232203662e1a98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::IsAlNum</definition>
        <argsstring>(char ch)</argsstring>
        <name>IsAlNum</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="1925" column="13" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" bodystart="1925" bodyend="1927"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1a4bd96b7fa6486802d33ddc217af55a39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::IsDigit</definition>
        <argsstring>(char ch)</argsstring>
        <name>IsDigit</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="1928" column="13" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" bodystart="1928" bodyend="1930"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1ac26ce3883bc8919c27074975e958f3b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::IsLower</definition>
        <argsstring>(char ch)</argsstring>
        <name>IsLower</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="1931" column="13" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" bodystart="1931" bodyend="1933"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1af429e04f70f9c10f6aa76a5d1ccd389f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::IsSpace</definition>
        <argsstring>(char ch)</argsstring>
        <name>IsSpace</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="1934" column="13" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" bodystart="1934" bodyend="1936"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1a84f3baa379fec6bf5947cb5165aa8cc9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::IsUpper</definition>
        <argsstring>(char ch)</argsstring>
        <name>IsUpper</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="1937" column="13" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" bodystart="1937" bodyend="1939"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1aa234ef141278263fb143b616c74c86e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::IsXDigit</definition>
        <argsstring>(char ch)</argsstring>
        <name>IsXDigit</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="1940" column="13" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" bodystart="1940" bodyend="1942"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1adfc1d541600d0677e63587ab20734c88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::IsXDigit</definition>
        <argsstring>(char16_t ch)</argsstring>
        <name>IsXDigit</name>
        <param>
          <type>char16_t</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="1948" column="13" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" bodystart="1948" bodyend="1951"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1a8d1269239eab81c9c48d6bc75b45dfa6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::IsXDigit</definition>
        <argsstring>(char32_t ch)</argsstring>
        <name>IsXDigit</name>
        <param>
          <type>char32_t</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="1952" column="13" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" bodystart="1952" bodyend="1955"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1a6ab68a30f8291c09b2289c132bbe3b16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::IsXDigit</definition>
        <argsstring>(wchar_t ch)</argsstring>
        <name>IsXDigit</name>
        <param>
          <type>wchar_t</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="1956" column="13" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" bodystart="1956" bodyend="1959"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1ad9c627ef2a94245e3fd69e7ab3d49b42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char</type>
        <definition>char testing::internal::ToLower</definition>
        <argsstring>(char ch)</argsstring>
        <name>ToLower</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="1961" column="13" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" bodystart="1961" bodyend="1963"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1ac1b876a8133895bd553d4780ecaa1e3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char</type>
        <definition>char testing::internal::ToUpper</definition>
        <argsstring>(char ch)</argsstring>
        <name>ToUpper</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="1964" column="13" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" bodystart="1964" bodyend="1966"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1aa6afda12e567c353e2e9b9c2e8cae14f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string testing::internal::StripTrailingSpaces</definition>
        <argsstring>(std::string str)</argsstring>
        <name>StripTrailingSpaces</name>
        <param>
          <type>std::string</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="1968" column="20" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" bodystart="1968" bodyend="1973"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1a7a44d4db9093d26c129833184236473c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ bool</type>
        <definition>GTEST_API_ bool testing::internal::ParseInt32</definition>
        <argsstring>(const Message &amp;src_text, const char *str, int32_t *value)</argsstring>
        <name>ParseInt32</name>
        <param>
          <type>const <ref refid="classtesting_1_1Message" kindref="compound">Message</ref> &amp;</type>
          <declname>src_text</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="2241" column="17" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" declline="2241" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1a67132cdce23fb71b6c38ee34ef81eb4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::BoolFromGTestEnv</definition>
        <argsstring>(const char *flag, bool default_val)</argsstring>
        <name>BoolFromGTestEnv</name>
        <param>
          <type>const char *</type>
          <declname>flag</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>default_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="2246" column="6" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" declline="2246" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1aec40575a5ee892d3d3060bb1fc07d782" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ int32_t</type>
        <definition>GTEST_API_ int32_t testing::internal::Int32FromGTestEnv</definition>
        <argsstring>(const char *flag, int32_t default_val)</argsstring>
        <name>Int32FromGTestEnv</name>
        <param>
          <type>const char *</type>
          <declname>flag</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>default_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="2247" column="20" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" declline="2247" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1a0c793c6d84760d900299916c077a1af4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string testing::internal::OutputFlagAlsoCheckEnvVar</definition>
        <argsstring>()</argsstring>
        <name>OutputFlagAlsoCheckEnvVar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="2248" column="13" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" declline="2248" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="gtest-port_8h_1a72099045bb72303860b2138658a5f6ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* testing::internal::StringFromGTestEnv</definition>
        <argsstring>(const char *flag, const char *default_val)</argsstring>
        <name>StringFromGTestEnv</name>
        <param>
          <type>const char *</type>
          <declname>flag</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>default_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" line="2249" column="12" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-port.h" declline="2249" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="gtest-string_8h_1a75bdbc38815772055696b2a40bae614e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GTEST_API_ std::string</type>
        <definition>GTEST_API_ std::string testing::internal::StringStreamToString</definition>
        <argsstring>(::std::stringstream *stream)</argsstring>
        <name>StringStreamToString</name>
        <param>
          <type>::std::stringstream *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-string.h" line="170" column="24" declfile="/home/jan/packages/elements/include/gtest/internal/gtest-string.h" declline="170" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="gtest-type-util_8h_1a5342e843f087081705094beae07b557b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string testing::internal::CanonicalizeForStdLibVersioning</definition>
        <argsstring>(std::string s)</argsstring>
        <name>CanonicalizeForStdLibVersioning</name>
        <param>
          <type>std::string</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-type-util.h" line="55" column="20" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-type-util.h" bodystart="55" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="gtest-type-util_8h_1a635606b4731f843c86ec8ca51cab83a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string testing::internal::GetTypeName</definition>
        <argsstring>()</argsstring>
        <name>GetTypeName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gtest/internal/gtest-type-util.h" line="93" column="13" bodyfile="/home/jan/packages/elements/include/gtest/internal/gtest-type-util.h" bodystart="93" bodyend="99"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/jan/packages/elements/include/gmock/gmock-actions.h" line="165" column="1"/>
  </compounddef>
</doxygen>
