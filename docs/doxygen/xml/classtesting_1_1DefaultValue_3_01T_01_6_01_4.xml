<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classtesting_1_1DefaultValue_3_01T_01_6_01_4" kind="class" language="C++" prot="public">
    <compoundname>testing::DefaultValue&lt; T &amp; &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classtesting_1_1DefaultValue_3_01T_01_6_01_4_1a49d846b827b1a35b60e2eaad98de5c04" prot="private" static="yes" mutable="no">
        <type>T *</type>
        <definition>T * testing::DefaultValue&lt; T &amp; &gt;::address_</definition>
        <argsstring></argsstring>
        <name>address_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-actions.h" line="390" column="12" bodyfile="/home/jan/packages/elements/include/gmock/gmock-actions.h" bodystart="390" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtesting_1_1DefaultValue_3_01T_01_6_01_4_1a9863abf3d311ce5007d7e57dfce2f252" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void testing::DefaultValue&lt; T &amp; &gt;::Set</definition>
        <argsstring>(T &amp;x)</argsstring>
        <name>Set</name>
        <param>
          <type>T &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-actions.h" line="365" column="15" bodyfile="/home/jan/packages/elements/include/gmock/gmock-actions.h" bodystart="365" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1DefaultValue_3_01T_01_6_01_4_1a3c8f9f81e591370f9b33798f58ca1a10" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void testing::DefaultValue&lt; T &amp; &gt;::Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-actions.h" line="370" column="15" bodyfile="/home/jan/packages/elements/include/gmock/gmock-actions.h" bodystart="370" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1DefaultValue_3_01T_01_6_01_4_1a3e61547c2f0141cc8004385f3a9c817d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool testing::DefaultValue&lt; T &amp; &gt;::IsSet</definition>
        <argsstring>()</argsstring>
        <name>IsSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-actions.h" line="373" column="15" bodyfile="/home/jan/packages/elements/include/gmock/gmock-actions.h" bodystart="373" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1DefaultValue_3_01T_01_6_01_4_1a38420499e17d2fb4146ae6c4265f0d55" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool testing::DefaultValue&lt; T &amp; &gt;::Exists</definition>
        <argsstring>()</argsstring>
        <name>Exists</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-actions.h" line="377" column="15" bodyfile="/home/jan/packages/elements/include/gmock/gmock-actions.h" bodystart="377" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1DefaultValue_3_01T_01_6_01_4_1a1310448dd8c171aecfcbf7c8df5de7bd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>static T&amp; testing::DefaultValue&lt; T &amp; &gt;::Get</definition>
        <argsstring>()</argsstring>
        <name>Get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jan/packages/elements/include/gmock/gmock-actions.h" line="384" column="12" bodyfile="/home/jan/packages/elements/include/gmock/gmock-actions.h" bodystart="384" bodyend="387"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/jan/packages/elements/include/gmock/gmock-actions.h" line="362" column="1" bodyfile="/home/jan/packages/elements/include/gmock/gmock-actions.h" bodystart="362" bodyend="391"/>
    <listofallmembers>
      <member refid="classtesting_1_1DefaultValue_3_01T_01_6_01_4_1a49d846b827b1a35b60e2eaad98de5c04" prot="private" virt="non-virtual"><scope>testing::DefaultValue&lt; T &amp; &gt;</scope><name>address_</name></member>
      <member refid="classtesting_1_1DefaultValue_3_01T_01_6_01_4_1a3c8f9f81e591370f9b33798f58ca1a10" prot="public" virt="non-virtual"><scope>testing::DefaultValue&lt; T &amp; &gt;</scope><name>Clear</name></member>
      <member refid="classtesting_1_1DefaultValue_3_01T_01_6_01_4_1a38420499e17d2fb4146ae6c4265f0d55" prot="public" virt="non-virtual"><scope>testing::DefaultValue&lt; T &amp; &gt;</scope><name>Exists</name></member>
      <member refid="classtesting_1_1DefaultValue_3_01T_01_6_01_4_1a1310448dd8c171aecfcbf7c8df5de7bd" prot="public" virt="non-virtual"><scope>testing::DefaultValue&lt; T &amp; &gt;</scope><name>Get</name></member>
      <member refid="classtesting_1_1DefaultValue_3_01T_01_6_01_4_1a3e61547c2f0141cc8004385f3a9c817d" prot="public" virt="non-virtual"><scope>testing::DefaultValue&lt; T &amp; &gt;</scope><name>IsSet</name></member>
      <member refid="classtesting_1_1DefaultValue_3_01T_01_6_01_4_1a9863abf3d311ce5007d7e57dfce2f252" prot="public" virt="non-virtual"><scope>testing::DefaultValue&lt; T &amp; &gt;</scope><name>Set</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
